-- Exemplo row_number/over/partition para retirar duplicidades

SELECT 
    num_cpf,
    cod_rating_credito,
    safra,
    
    row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf
                order by -- organizado por 
                    num_cpf, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    safra desc -- data descendente
        ) as NUM_LINHA
    
    
FROM work_pefisa.estudo_risco_grade
    where cod_rating_credito >= 5 and safra <= 202012 and safra >= 202006 and NUM_LINHA = 1

_________________________________________________________________________________________________________

--Exemplo base com WITH

WITH Base_inicio as (SELECT 

a.num_cpf_cliente,
a.id_produto_cartao_ant,
a.id_produto_cartao,
a.dth_ult_grade_produto_cartao,
a.num_anomes_ads_conta,
b.des_sit_conta,
b.flg_conta_cancelada

FROM unificacao_pefisa.conta a 

LEFT JOIN base_operacional.limite_disponibilidade_pos_mensal b
on a.num_cpf_cliente = b.num_cpf_cliente_titular),

Base_filtro as (

SELECT* FROM Base_inicio
WHERE num_anomes_ads_conta = 202012
and 
id_produto_cartao_ant = 4
and
id_produto_cartao = 5
--and
--not des_sit_conta ='
and 
flg_conta_cancelada = 'N')


SELECT count(*) FROM Base_filtro

________________________________________________


-- SAFRA DE BANDEIRADO 202009 E 202010 TOTAL 21416

with BASE_INICIAL as (

select *, 

ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 

from base_operacional.conta_cartao_cliente  a

where a.id_produto_cartao_inicial in (1,2,5,9) and a.num_anomes_ads_conta in (202009,202010)),

BASE_FILTRO as (
SELECT * FROM BASE_INICIAL WHERE LINHA = 1)

Select count(BASE_FILTRO.num_cpf_cliente) FROM BASE_FILTRO

__________________________________________________

--codigo cobranca x base atual de negociaçoes 

with base as (

SELECT

*
   
FROM k860332_base_cobranca a

LEFT JOIN unificacao_pefisa.relatorio_contabil_audit b 

ON CAST(a.num_cpf as BIGINT) = (b.num_cpf_cliente) 


where b.num_anomes_referencia = 202109),


BASE_FILTRO as ( select *,

ROW_NUMBER() OVER(PARTITION BY num_cpf ORDER BY data_adesao desc) AS LINHA 

from base)

select * from BASE_FILTRO where Linha = 1

_________________________________________________________________________________________________________

--ESTUDO RETOMADA 19/10/2021

with base_A as (

SELECT * FROM base_operacional.cobr_acordo_cliente

where dat_referencia = 20211018 

and dat_emissao >= '2020-04-01 00:00:00' 
AND dat_emissao <= '2020-09-30 23:59:59'
and id_situacao = 'LIQUIDADO'),

base_completo as (

SELECT

a.*,

(case 
when b.cpf_cnpj is not null then '1'
when b.cpf_cnpj is null then '0'
end) as Flag_Cessao

FROM base_A a

left join work_pefisa.k857312_venda_carteira b

on a.num_cpf_cnpj_cliente = cast(b.cpf_cnpj as bigint))
 
select * from base_completo
where Flag_Cessao = '0'

______________________________________________________________________________________________________

--ACAO GRADE PL 21/10/21, pegar a base de clientes com pelo menos uma fatura nos utimos 3 anos e tornalos BAND e calc os limites

CREATE table work_pefisa.k860332_acao_grade as 

WITH base  as (

select *
from (select num_cpf_tit_cta,
            dat_vencto_real,
            val_saldo_atual_final,
            sum(case when year(dat_vencto_real)>=2018-10-01 then 1 else 0 end) as teste,
               row_number() 
                over(partition by 
                  num_cpf_tit_cta 
                ORDER BY num_cpf_tit_cta,
                          dat_vencto_real DESC ) AS NUM_LINHA
    from unificacao_pefisa.fatura_ccred
    where val_saldo_atual_final>0
    group by 1,2,3) as a
where a.NUM_LINHA = 1
),

Base_PL as (
SELECT * from work_pefisa.k870086_base_up_limites_202110V6
where cod_rating_credito_so > 5 
and des_sit_conta = 'Normal'
and id_produto_cartao in (1, 4, 8)   --666115
),

base_filtro as (

select * from  base a

left join Base_PL b

on a.num_cpf_tit_cta = b.num_cpf_cliente

WHERE 
num_cpf_cliente is NOT NULL),

base_filtro_2 as (
SELECT * FROM base_filtro
WHERE teste = 1),

base_completo as (
SELECT
num_cpf_cliente,
(CASE
    WHEN id_produto_cartao in (1,4,8) and idade <= 32 THEN 450
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 33 and 39  THEN 800
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 40 and 49  THEN 900
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 50 and 57  THEN 1000
    WHEN id_produto_cartao in (1,4,8) and idade >= 58  THEN 800
    ELSE 0 END) as LIM_MAX_PL_CAMP,
	(CASE
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade <= 32 THEN 1200
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 33 and 39  THEN 1500
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 40 and 49  THEN 1800
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 50 and 57  THEN 2000
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade >= 58  THEN 1500
    ELSE 0 END) as LIM_MAX_BAND_CAMP,
(CASE
    WHEN id_produto_cartao in (1,4,8) and idade <= 32 THEN 120
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 33 and 39  THEN 230
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 40 and 49  THEN 250
    WHEN id_produto_cartao in (1,4,8) and idade BETWEEN 50 and 57  THEN 300
    WHEN id_produto_cartao in (1,4,8) and idade >= 58  THEN 230  
    ELSE 0 END) as LIM_MAX_PAR_PL_CAMP,
(CASE
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade <= 32 THEN 120
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 33 and 39  THEN 230
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 40 and 49  THEN 250
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade BETWEEN 50 and 57  THEN 300
    WHEN id_produto_cartao in (2,3,5,6,9,10) and idade >= 58  THEN 230
  	ELSE 0 END) as LIM_MAX_PAR_BAND_CAMP
FROM base_filtro_2)

SELECT *  FROM base_completo


---------------------------------------------------------------------------------------

--ACAO GRADE PL 21/10/21, cruzar base de clientes PL com pelo menos uma fatura nos utimos 3 anos. 

CREATE table work_pefisa.k860332_acao_grade as 

WITH base  as (

select *
from (select num_cpf_tit_cta,
            dat_vencto_real,
            val_saldo_atual_final,
            sum(case when year(dat_vencto_real)>=2018-10-01 then 1 else 0 end) as teste,
               row_number() 
                over(partition by 
                  num_cpf_tit_cta 
                ORDER BY num_cpf_tit_cta,
                          dat_vencto_real DESC ) AS NUM_LINHA
    from unificacao_pefisa.fatura_ccred
    where val_saldo_atual_final>0
    group by 1,2,3) as a
where a.NUM_LINHA = 1
),

Base_PL as (
SELECT * from work_pefisa.k870086_base_up_limites_202110V6
where cod_rating_credito_so > 5 
and des_sit_conta = 'Normal'
and id_produto_cartao in (1, 4, 8)   --666115
),

base_filtro as (
select * from  base a

left join Base_PL b

on a.num_cpf_tit_cta = b.num_cpf_cliente

WHERE 
num_cpf_cliente is NOT NULL),

base_filtro_2 as (
SELECT * FROM base_filtro
WHERE teste = 1),

base_completo as (
SELECT
num_cpf_cliente,
idade,
cod_rating_credito_so
FROM base_filtro_2)

SELECT * FROM base_completo
__________________________________________________________________________________________________________
 
--CRUZAMENTO REVENDEDORES X COM CLIENTES PNB

SELECT count(DISTINCT a.cpf) from work_pefisa.K860332_revedendor  a

LEFT JOIN unificacao_cliente_incremental.CLIENTE  b

on cast(a.cpf as BIGINT) = b.num_cpf_cnpj_cliente

where b.num_cpf_cnpj_cliente = 19273996884

-- PELA BASE CLIENTE

SELECT count(DISTINCT a.cpf) from work_pefisa.K860332_revedendor  a

LEFT JOIN unificacao_cliente_incremental.CLIENTE  b

on cast(a.cpf as BIGINT) = b.num_cpf_cnpj_cliente

where b.num_cpf_cnpj_cliente = 19273996884


-- PELA BASE CONTA

with BASE_REVENDEDOR as (

SELECT * from work_pefisa.K860332_revedendor),

BASE_CONTA as (

select
        A.*,
        row_number()
            over(
                partition by
                    num_cpf_cliente
                order by
                    num_cpf_cliente, 
                    (case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    dth_sit_conta desc,
                    dth_ult_atu_so DESC
        ) as NUM_LINHA  
    from
        unificacao_pefisa.conta A
    where
        id_produto_cartao <> 7
        and cod_sit_conta <> 74
    )
    
select count(*) from BASE_REVENDEDOR 

left join BASE_CONTA

on cast(cpf as BIGINT) = num_cpf_cliente
    
where cpf is null
    
--not null 1121

__________________________________________________________________________________________________________
 
--	CRUZAR BASE REVENDEDOR COM flx_pnb_cadastramento E flx_pernambucanas_pf  
--  PARA PEGAR O SCORE NO MOMENTO DO APLLY

with BASE_PNB as (

select prop_cpf_titular, calc_rating_decisao_final 

from unificacao_fraude.flx_pnb_cadastramento ), 

BASE_PF as (

select prop_cpf_titular, calc_rating as calc_rating_decisao_final

from unificacao_fraude.flx_pernambucanas_pf ),

BASE_UNION as (

select * from BASE_PNB 

union

select * from BASE_PF),

BASE_UNION2 as (

select prop_cpf_titular, min(calc_rating_decisao_final) as rating

from BASE_UNION

group by 1

),

BASE_REVENDEDOR as (

SELECT * from work_pefisa.K860332_revedendor),

CRUZAMENTO as (

select * from  BASE_REVENDEDOR a

left join BASE_UNION2 b

on a.cpf = b.prop_cpf_titular

)

select COUNT(*) from CRUZAMENTO

where rating is not null  --385

__________________________________________________________________________________________________________


--BASE troca_multiplo x base vinculação 03/11/2021

create table work_pefisa.k857312_troca_multiplo_cpfs  as

------- BASE TROCA MULTIPLO 26out21 -----
with BASE_TROCA_MULTIPLO as (

SELECT * FROM work_pefisa.k857312_troca_multiplo_cpf_26out21 

),

------- BASE VINCULAÇÃO -----
vinculacaoBand as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
 from work_pefisa.k821082_base_acoes3_vinc_lim_compl ),
 
vinculacaoPL as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
from  work_pefisa.k821082_base_acoes3_vinc_grade_compl
),

BaseVinculacao as (
select * from vinculacaoBand 
union
select * from vinculacaoPL),

BASE_CRUZAR as (

select * from BASE_TROCA_MULTIPLO a

left join BaseVinculacao b

on a.cpf = b.num_cpf_cnpj_cliente

)

select num_cpf_cnpj_cliente from BASE_CRUZAR   --Total: 648719  NIVEIS 5 e 6:580803   
where num_cpf_cnpj_cliente is not null

__________________________________________________________________________________________________________

--BASE GRADE 439k

--drop table work_pefisa.k857312_acao_grande_final_439k

create table work_pefisa.k857312_acao_grande_final_439k as 

with base_A as (

SELECT num_cpf_cliente from work_pefisa.k857312_acao_grade),

base_B as (

select 
a.num_cpf_cliente,
b.num_pontuacao_appl_band,
b.cod_rating_credito_so,
b.id_mes_ano_af,

    row_number()
            over(
                partition by 
                    a.num_cpf_cliente
                order by
                    a.num_cpf_cliente, 
                    b.dat_referencia desc
        ) as NUM_LINHA

from base_A A

left join ds_risco_behavior_score.etl_modelo_appl_band_neurotech B

on a.num_cpf_cliente = cast(b.num_cpf as string )),

base_B_filtrado as (

select * from base_B 
where NUM_LINHA =  1),

Base_C as (

select 
a.num_cpf_cliente,
a.cod_rating_credito_so,
a.num_pontuacao_appl_band,
a.id_mes_ano_af,
b.num_dias_atraso_cliente,

  row_number()
            over(
                partition by 
                    a.num_cpf_cliente
                order by
                    a.num_cpf_cliente, 
                    b.id_mes_ano_af desc
        ) as NUM_LINHA

from base_B_filtrado a

left join unificacao_pefisa.relatorio_contabil_audit b

on a.num_cpf_cliente = cast(b.num_cpf_cliente as string)),

base_C_filtrado as (

select * from base_C

where NUM_LINHA =  1),

base_D as (

select 
a.num_cpf_cliente,
a.cod_rating_credito_so,
a.num_pontuacao_appl_band,
a.id_mes_ano_af,
a.num_dias_atraso_cliente,
b.id_produto_cartao,
b.des_sit_conta,
b.dth_sit_conta


from base_C_filtrado a

left join unificacao_pefisa.conta b

on a.num_cpf_cliente = cast(b.num_cpf_cliente as string)

where b.id_produto_cartao <>  7),


base_final as (

select 

num_cpf_cliente,
cod_rating_credito_so,
num_pontuacao_appl_band,
num_dias_atraso_cliente,
id_produto_cartao,
id_mes_ano_af,
des_sit_conta,
dth_sit_conta,

row_number()
            over(
                partition by 
                    num_cpf_cliente
                order by
                    num_cpf_cliente, 
                    dth_sit_conta desc
        ) as NUM_LINHA

from base_D)

select * from base_final
where NUM_LINHA = 1


_________________________________________________________________________________________________________

--BASE EC 08/11/2021

--drop table work_pefisa.k857312_BASE_EC_Enriquecida

--create table work_pefisa.k857312_BASE_EC_Enriquecida as

-----BASE A---------

with BASE_EC as (

select * from work_pefisa.k857312_base_ec),

--------------------

-----BASE CONTA---------

BASE_CONTA as (

select 
a.cpf,
b.id_produto_cartao,
b.des_sit_conta,
b.dth_sit_conta,

row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.dth_sit_conta desc
        ) as NUM_LINHA

from  BASE_EC a

left join unificacao_pefisa.conta b

on CAST(a.cpf as bigint) = b.num_cpf_cliente

where b.id_produto_cartao <> 7 and b.id_produto_cartao <> 11 and b.id_produto_cartao <> 12),

-----------------------------

BASE_filtrada1 as (

select * from BASE_CONTA

where NUM_LINHA = 1),

-----------------------------

BASE_BHV as (

select 
a.cpf,
a.id_produto_cartao,
a.des_sit_conta,
a.dth_sit_conta,
b.num_pontuacao_appl_band,
b.cod_rating_credito_so,
b.dat_referencia,

    row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.id_mes_ano_af desc
        ) as NUM_LINHA

from BASE_filtrada1 a

left join  ds_risco_behavior_score.etl_modelo_appl_band_neurotech b

on cast(a.cpf as bigint) = b.num_cpf),

----------------------------------------

BASE_filtrada2 as (

select * from BASE_BHV

where NUM_LINHA = 1 ),

----------------------------------------

BASE_LIMITES as (

select 

a.cpf,
a.id_produto_cartao,
a.des_sit_conta,
a.dth_sit_conta,
a.num_pontuacao_appl_band,
a.cod_rating_credito_so,
a.dat_referencia,
b.val_limite_maximo,
b.val_limite_parcelas_nac,

    row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.dth_ult_atu_so desc
        ) as NUM_LINHA

from BASE_filtrada2 a

left join base_operacional.limite_disponibilidade_pos_mensal b

on cast(a.cpf as bigint) = num_cpf_cliente),

-------------------------------------------

BASE_Filtrada3 as (

select * from BASE_LIMITES

where NUM_LINHA = 1)

-------------------------------------------

select * from BASE_Filtrada3


________________________________________________________________________________________________________________________

-- BASE EC 09/11/2021 V2 --

--drop table work_pefisa.k857312_BASE_EC_Enriquecida

--create table work_pefisa.k857312_BASE_EC_Enriquecida as

-----BASE A---------

with BASE_EC as (

select * from work_pefisa.k857312_base_ec),

--------------------
BASE_PREP as (

select * from unificacao_pefisa.conta a

where a.id_produto_cartao <> 7 and a.id_produto_cartao <> 11 and a.id_produto_cartao <> 12),

-----BASE CONTA---------

BASE_CONTA as (

select 
a.cpf,
b.id_produto_cartao,
b.des_sit_conta,
b.dth_sit_conta,

row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.dth_sit_conta desc
        ) as NUM_LINHA

from  BASE_EC a

left join BASE_PREP b

on CAST(a.cpf as bigint) = b.num_cpf_cliente),


-----------------------------

BASE_filtrada1 as (

select * from BASE_CONTA

where NUM_LINHA = 1),

-----------------------------

BASE_BHV as (

select 
a.cpf,
a.id_produto_cartao,
a.des_sit_conta,
a.dth_sit_conta,
b.num_pontuacao_appl_band,
b.cod_rating_credito_so,
b.dat_referencia,

    row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.id_mes_ano_af desc
        ) as NUM_LINHA

from BASE_filtrada1 a

left join  ds_risco_behavior_score.etl_modelo_appl_band_neurotech b

on cast(a.cpf as bigint) = b.num_cpf),

----------------------------------------

BASE_filtrada2 as (

select * from BASE_BHV

where NUM_LINHA = 1 ),


----------------------------------------

LIMITES_FILTRO as (

select * from base_operacional.limite_disponibilidade_pos_mensal

where id_produto_cartao <> 7 and  id_produto_cartao <> 11 and  id_produto_cartao <> 12),


----------------------------------------

BASE_LIMITES as (

select 

a.cpf,
a.id_produto_cartao,
a.des_sit_conta,
a.dth_sit_conta,
a.num_pontuacao_appl_band,
a.cod_rating_credito_so,
a.dat_referencia,
b.val_limite_maximo,
b.val_limite_parcelas_nac,

    row_number()
            over(
                partition by 
                    a.cpf
                order by
                    a.cpf, 
                    b.dth_ult_atu_so desc
        ) as NUM_LINHA

from BASE_filtrada2 a

left join LIMITES_FILTRO b

on cast(a.cpf as bigint) = num_cpf_cliente),

-------------------------------------------

BASE_Filtrada3 as (

select * from BASE_LIMITES

where NUM_LINHA = 1)


-------------------------------------------
select * from BASE_Filtrada3

________________________________________________________________________________________________________________________

--- BASE COM TODOS OS GRADES DESDE JANEIRO DE 2021

--drop table work_pefisa.k857312_ESTUDO_FPD_GRADE

--create table work_pefisa.k857312_ESTUDO_FPD_GRADE as 

with ep as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101' 
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202110'),


--- BASE NIVEL DE RISCO
base_nr as (

select 

    id_mes_ano_af as safra, 
    num_cpf_cliente, 
    des_nivel_risco, 
    tip_carteira, 


    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202110)

group by 

    safra,
    num_cpf_cliente, 
    des_nivel_risco, 
    tip_carteira),


-- BASE CURA
base_cura as ( 

select 
    a.*,
    case  when b.CURA is null then a.des_nivel_risco
    else b.CURA
    end as nivel_risco_cura
    
from base_nr as a
left join work_pefisa.k870056_cura_hist as b
on a.num_cpf_cliente = b.cpf and a.safra = b.safra),


--- CRUZAMENTO ENTRE BASE GRADE E BASE CURA PARA ATRIBUIR A LETRA DE RISCO
BASE_CRUZAMENTO as (

select

    a.*,
    b.safra,
    b.des_nivel_risco,
    b.nivel_risco_cura,

    row_number()  -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    a.num_cpf_cliente
                order by -- organizado por 
                    a.num_cpf_cliente, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    b.safra desc -- data descendente
        ) as NUM_LINHA

from ep a
left join base_cura b
on a.num_cpf_cliente = b.num_cpf_cliente
where cast(dat_grade AS INT) <= safra),


-- ELIMINANDO DUPLICATAS DA BASE_CRUZAMENTO
Filtro_BASE_CRUZAMENTO as (

select * from BASE_CRUZAMENTO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A BASE_CRUZAMENTO
BASE_BHV as (

select 

    a.dat_grade,	
    a.num_cpf_cliente,	
    a.produto,
    a.safra,	
    a.des_nivel_risco,	
    a.nivel_risco_cura,	
    b.num_pontuacao_appl_band,
    b.cod_rating_credito_so,
    b.dat_referencia,
    b.num_idade_cliente,
    b.qtd_idade_cliente_anos,
    b.val_limite_rotativo,
    b.val_lim_parcela_facil,
    
    row_number()
            over(
                partition by 
                    a.num_cpf_cliente
                order by
                    a.num_cpf_cliente, 
                    b.id_mes_ano_af desc
        ) as NUM_LINHA

from Filtro_BASE_CRUZAMENTO a
left join  ds_risco_behavior_score.etl_modelo_appl_band_neurotech b
on cast(a.num_cpf_cliente as bigint) = b.num_cpf),


-- ELIMINANDO AS DUPLICATAS DA BASE_COM_BHV
BASE_COM_BHV as (

select * from BASE_BHV
where NUM_LINHA = 1),


-- AGREGANDO O TEMPO DE RELACIONAMENTO DA BASE CONTA --
BASE_COM_RALACIONAMENTO as ( 

select

    a.dat_grade,	
    a.num_cpf_cliente,	
    a.produto,
    a.safra,	
    a.des_nivel_risco,	
    a.nivel_risco_cura,	
    a.num_pontuacao_appl_band,
    a.cod_rating_credito_so,
    a.dat_referencia,
    a.num_idade_cliente,
    a.qtd_idade_cliente_anos,
    a.val_limite_rotativo,
    a.val_lim_parcela_facil,
    b.dth_ads_conta,
    
            row_number()
                        over(
                            partition by 
                                b.num_cpf_cliente
                            order by
                                b.num_cpf_cliente, 
                                b.dth_sit_conta asc
                    ) as NUM_LINHA

from BASE_COM_BHV a 
left join  unificacao_pefisa.conta b 
on a.num_cpf_cliente = b.num_cpf_cliente)

-- BASE FINAL
select * from BASE_COM_RALACIONAMENTO
where NUM_LINHA = 1  --#250051



________________________________________________________________________________________________________________________


--- BASE PARA PEGAR BHV 11/11/2021

--drop table work_pefisa.k857312_ESTUDO_FPD_GRADE

--create table work_pefisa.k857312_ESTUDO_FPD_GRADE as 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202101'),

FILTRO_BHV_JANEIRO AS (

select * from  ds_risco_behavior_score.etl_modelo_appl_band_neurotech
where dat_referencia <= '2021-01-01 00:00:00'),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.num_pontuacao_appl_band,
    b.cod_rating_credito_so,
    b.dat_referencia,
    b.num_idade_cliente,
    b.qtd_idade_cliente_anos,
    b.val_limite_rotativo,
    b.val_lim_parcela_facil,
    
    row_number()
            over(
                partition by 
                    a.num_cpf_cliente
                order by
                    a.num_cpf_cliente, 
                    b.id_mes_ano_af desc
        ) as NUM_LINHA

from EP a
left join  FILTRO_BHV_JANEIRO b
on cast(a.num_cpf_cliente as bigint) = b.num_cpf),


-- ELIMINANDO AS DUPLICATAS DA BASE_COM_BHV
BASE_COM_BHV as (

select * from BASE_BHV
where NUM_LINHA = 1)

select * from BASE_COM_BHV
where num_pontuacao_appl_band is not null  --not null 2930



________________________________________________________________________________________________________________________

-- BASE UNIFICACAO FRAUDE 11/11/2021, FONTE DE BHV? VEREMOS

SELECT count(*), SUM(case when calc_score is not NULL then 1 else 0 end) as qtd
FROM unificacao_fraude.flx_pernambucanas_grade
WHERE resultado_proposta = 'Aprovado'
--and calc_score is NOT NULL
javascript: void(0);


SELECT * from unificacao_fraude.flx_pernambucanas_grade
where prop_cpf_titular 
in (
'19781300663',
'02842780418',
'14459458780',
'08396274835',
'23695038829')

________________________________________________________________________________________________________________________

--- BASE  12/11/2021

--drop table work_pefisa.k857312_ESTUDO_FPD_GRADE

--create table work_pefisa.k857312_ESTUDO_FPD_GRADE as 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202101'),

FILTRO_BHV_JANEIRO AS (

select * from  unificacao_fraude.flx_pernambucanas_grade
where calc_dat_calculo_score <= '2021-01-30 00:00:00'
and resultado_proposta = 'Aprovado'),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.calc_rating,
    b.calc_score,
    b.calc_dat_calculo_score,
    b.calc_idade,
    b.calc_limite_global,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_elo_mais,
    b.production_date,
    b.versaopolitica,
    
    row_number()
            over(
                partition by 
                    b.prop_cpf_titular
                order by
                    b.prop_cpf_titular, 
                    b.calc_dat_calculo_score desc
        ) as NUM_LINHA

from EP a
left join  FILTRO_BHV_JANEIRO b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


-- ELIMINANDO AS DUPLICATAS DA BASE_COM_BHV
BASE_COM_BHV as (

select * from BASE_BHV
where NUM_LINHA = 1)

select calc_rating, count(calc_rating) from BASE_COM_BHV
where calc_rating is not null --not null 22886
group by calc_rating
order by cast(calc_rating as bigint) asc


________________________________________________________________________________________________________________________


--- BASE  12/11/2021

--USADA PARA PEGAR SÓ 1 MES... DEPOIS JUNTEI 2021/01 ATÉ 2021/10

--drop table work_pefisa.k857312_ESTUDO_FPD_GRADE

--create table work_pefisa.k857312_ESTUDO_FPD_GRADE as 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202101'),

FILTRO_BHV_JANEIRO AS (

select * from  unificacao_fraude.flx_pernambucanas_grade
where calc_dat_calculo_score <= '2021-01-30 00:00:00'
and resultado_proposta = 'Aprovado'),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.calc_rating,
    b.calc_score,
    b.calc_dat_calculo_score,
    b.calc_idade,
    b.calc_limite_global,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_elo_mais,
    b.production_date,
    b.versaopolitica,
    
    row_number()
            over(
                partition by 
                    b.prop_cpf_titular
                order by
                    b.prop_cpf_titular, 
                    b.calc_dat_calculo_score desc
        ) as NUM_LINHA

from EP a
left join  FILTRO_BHV_JANEIRO b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


-- ELIMINANDO AS DUPLICATAS DA BASE_COM_BHV
BASE_COM_BHV as (

select * from BASE_BHV
where NUM_LINHA = 1)

select * from BASE_COM_BHV
where calc_rating is not null --not null 22885

________________________________________________________________________________________________________________________

--BASE MCC 

select distinct cod_tipo_estab_mcc_autoriz from unificacao_pefisa.autorizacao_cartao_credito

select * from faturamento_conta_digital  
where des_tipo_transacao = "C3487 - COMPRA U$"


________________________________________________________________________________________________________________________

--HOMOLOGACAO BASE BHV


with BASE_1 as (

SELECT 

 (case 
        when cod_prod_cartao in (2,3,5,6,9,10) then 'Band'
        when cod_prod_cartao in (1,4,8)  then 'PL'
        when cod_prod_cartao in (11) then 'Autopass'
        when cod_prod_cartao in (12) then 'Pefisa'
        else 'Outros' END) as produto

FROM  work_datascience.behavior_score_etl_modelo_appl_band_neurotech_v1)

select produto, count(produto) from BASE_1
group by produto


with BASE_1 as (

SELECT 

 (case 
        when cod_prod_cartao in (2,3,5,6,9,10) then 'Band'
        when cod_prod_cartao in (1,4,8)  then 'PL'
        when cod_prod_cartao in (11) then 'Autopass'
        when cod_prod_cartao in (12) then 'Pefisa'
        else 'Outros' END) as produto

FROM  ds_risco_behavior_score.etl_modelo_appl_band_neurotech )

select produto, count(produto) from BASE_1
group by produto


----------------------------------------------------
-- meses da base
select distinct(id_mes_ano_af) from work_datascience.behavior_score_etl_modelo_appl_band_neurotech_v1 
 
 
select distinct(id_mes_ano_af) from  ds_risco_behavior_score.etl_modelo_appl_band_neurotech 

------------------------------------------------
-- distintos
select count(distinct(num_cpf)) from work_datascience.behavior_score_etl_modelo_appl_band_neurotech_v1 
-- distinct 2487361
--nova 2487361 
 
select count(distinct(num_cpf)) from  ds_risco_behavior_score.etl_modelo_appl_band_neurotech 
-- distinct 4017916
-- atual 4017916


-------------------------
--band
select cod_rating_credito_so, min(num_pontuacao_appl_band), max(num_pontuacao_appl_band) 
from work_datascience.behavior_score_etl_modelo_appl_band_neurotech_v1 
where cod_prod_cartao in (2,3,5,6,9,10)
and sk_modelo_score = 204
group by cod_rating_credito_so
order by cod_rating_credito_so asc

--pl
select cod_rating_credito_so, min(num_pontuacao_appl_band), max(num_pontuacao_appl_band) 
from work_datascience.behavior_score_etl_modelo_appl_band_neurotech_v1 
where cod_prod_cartao in (1,4,8)
and sk_modelo_score = 203
group by cod_rating_credito_so
order by cod_rating_credito_so asc

_______________________________________________________________________________________________________________________

-- motivo de recusa, Pefisa lageados

SELECT 

data_cod_oper_politica,
calc_rating_decisao_final,
calc_score_credito,
calc_score_politica,
prop_cpf_titular,
nomepolitica,
resultado_proposta,
prop_politica,
ret_motivo_analise

FROM unificacao_fraude.flx_pnb_cadastramento 
where prop_codigo_da_loja = '5005' 
and prop_politica = 'P01'
and prop_cpf_titular in (
'35612709803',
'41799599841',
'27432650861',
'42640885855',
'26916693860',
'41230957391',
'50495139874',
'30873381840',
'45899268816',
'06706623482',
'28743564844',
'23889795870',
'40968356842')

________________________________________________________________________________________________________________________

-- Pegar letra de risco para a base de grade com FPD 18/11/2021


with BASE_1 as (

SELECT num_cpf_cliente as cpf 

FROM work_pefisa.k857312_estudo_fpd_grade

where cod_rating_credito_so = 5),

BASE_2 as (

select 

    a.cpf,
    b.*

from BASE_1 a
left join unificacao_pefisa.relatorio_contabil_audit b
on a.cpf = b.num_cpf_cliente)


select * from BASE_2
;


select * from unificacao_pefisa.relatorio_contabil_audit

----------------------------------------------------------------------------------------------------

-- Pegar letra de risco para a base de grade com FPD 19/11/2021

-- drop table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE

-- create table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE as

with BASE_1 as (

SELECT

    num_cpf_cliente as cpf,
    calc_idade,
    dat_grade,
    calc_rating

FROM work_pefisa.k857312_estudo_fpd_grade_01a10),

BASE_2 as (

select 

    *,
     row_number()
                        over(
                            partition by 
                                num_cpf_cliente
                            order by
                                num_cpf_cliente, 
                                id_mes_ano_af desc
                    ) as NUM_LINHA

from unificacao_pefisa.relatorio_contabil_audit),
--where id_mes_ano_af >= 202101), pegar a letra de risco mais atualizada

BASE_3 as (

select * from BASE_2 
where NUM_LINHA = 1),

BASE_4 as (

select 

    a.cpf,
    a.calc_idade,
    a.dat_grade,
    a.calc_rating,
    b.*

from BASE_1 a
left join BASE_3 b
on cast(a.cpf as bigint) = b.num_cpf_cliente)

select * from BASE_4

________________________________________________________________________________________________________________________

-- Pegar letra de risco para a base de grade com FPD 19/11/2021

-- drop table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE

-- create table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE as

with BASE_1 as (

SELECT

    num_cpf_cliente as cpf,
    calc_idade,
    dat_grade,
    calc_rating,	
    calc_dat_calculo_score

FROM work_pefisa.k857312_estudo_fpd_grade_01a10
where dat_grade = '202107'),

BASE_2 as (

select 

    *,
     row_number()
                        over(
                            partition by 
                                num_cpf_cliente
                            order by
                                num_cpf_cliente, 
                                id_mes_ano_af asc
                    ) as NUM_LINHA

from unificacao_pefisa.relatorio_contabil_audit
where id_mes_ano_af >= 202110), 

BASE_3 as (

select * from BASE_2
where NUM_LINHA = 1),

BASE_4 as (

select 

    a.cpf,
    a.calc_idade,
    a.dat_grade,
    a.calc_rating,
    a.calc_dat_calculo_score,
    b.*

from BASE_1 a
left join BASE_3 b
on cast(a.cpf as bigint) = b.num_cpf_cliente)

select * from BASE_4

_________________________________________________________________________________________________________

--ESTUDO PL 29/11, INCORRETO, POR PEGAR A ENTRADA DO CLIENTE COM QUALQUER PRODUTO E NAO SÓ PL

with BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202110'),

BASE_CONTA as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
        row_number()
            over(
                partition by 
                    num_cpf_cliente
                order by
                    num_cpf_cliente, 
                    dth_ult_atu_so asc
        ) as NUM_LINHA
    
from unificacao_pefisa.conta),

FILTRO1_BASE_CONTA as ( 
select 

    num_cpf_cliente as cpf,
    num_anomes_ads_conta,
    NUM_LINHA

from BASE_CONTA
where NUM_LINHA = 1),

BASE_CRUZADA as (

select

    a.*, 
    b.*

from BASE_GRADE a
left join FILTRO1_BASE_CONTA b
on a.num_cpf_cliente = b.cpf)

select * from BASE_CRUZADA

_________________________________________________________________________________________________________

--ESTUDO PL 30/11, MELHORADO POIS PEGA A ENTRAGA APENAS COMO PL
with BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202110'),

BASE_CONTA_HIST as (

SELECT 

    dth_ads_conta,
    num_cpf_cliente as cpf,
    dat_referencia,
    case 
    when id_produto_cartao in (1,4,8) then '1'
    when id_produto_cartao in (2,3,5,6,7,9,10)  then '2'
    else '3' end as produto
 
FROM unificacao_pefisa.conta_hist),

FILTRO_CONTA_HIST1 AS (

SELECT * 

FROM BASE_CONTA_HIST
WHERE produto = '1'),

FILTRO_CONTA_HIST2 AS ( 

select 

    *, 
 row_number()
            over(
                partition by 
                    cpf
                order by
                    cpf, 
                    dat_referencia asc
        ) as NUM_LINHA 

from FILTRO_CONTA_HIST1),

FILTRO_CONTA_HIST3 AS (

select * from FILTRO_CONTA_HIST2
where NUM_LINHA = 1),

BASE_CRUZADA as (

select

    a.*, 
    b.dth_ads_conta,
    b.cpf,
    b.dat_referencia,
    b.produto as prod

from BASE_GRADE a
left join FILTRO_CONTA_HIST3 b
on a.num_cpf_cliente = b.cpf)

select * from BASE_CRUZADA

_________________________________________________________________________________________________________


--ESTUDO EVOLLUCAO PL 01/12

with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente as cpf,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente as cpf,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (4,8) then 'PL'
                                when id_produto_cartao_inicial in (1,2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202101) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  

BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

BASE_CRUZADA as (

select * from BASE_PL a

left join BASE_GRADE b

on a.cpf = b.num_cpf_cliente)


select * from BASE_CRUZADA

________________________________________________________________________________________________________________________



--ESTUDO EVOLLUCAO PL 02/12

with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (4,8) then 'PL'
                                when id_produto_cartao_inicial in (1,2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202101) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  

BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente as cpf, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto_do_grade

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

BASE_CRUZADA as (

select 

    *

from BASE_PL a

left join BASE_GRADE b

on a.num_cpf_cliente = b.cpf)

select  *   from BASE_CRUZADA
where dat_grade is not null

-- null 47651
-- not null 9465


________________________________________________________________________________________________________________________

--ESTUDO EVOLLUCAO PL 02/12

with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (4,8) then 'PL'
                                when id_produto_cartao_inicial in (1,2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202101) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  

BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente as cpf, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto_do_grade

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

BASE_CRUZADA as (

select * from BASE_PL a

left join BASE_GRADE b

on a.num_cpf_cliente = b.cpf)

select  *   from BASE_CRUZADA
where dat_grade is not null

-- null 47651
-- not null 9465

________________________________________________________________________________________________________________________

--para testar a base


select dth_ult_grade_produto_cartao,
       id_produto_cartao_ant,
       id_produto_cartao

from  unificacao_pefisa.conta
where num_cpf_cliente = 49031846848

----

select 
    dth_ult_grade_produto_cartao,
    id_produto_cartao_ant,
    id_produto_cartao

from  unificacao_pefisa.conta_hist
where num_cpf_cliente = 49031846848

----------------------------------------------------------------

--ESTUDO EVOLLUCAO PL 03/12

--BASE COM A PRODUÇÃO DE PL DE UM MES
with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (4,8) then 'PL'
                                when id_produto_cartao_inicial in (1,2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202011) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  

--BASE COM  A BASE DE GRADE EM UM INTERVALO DE TEMPO
BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente as cpf, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto_do_grade

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202011'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

--CRUZA AS DUAS BASES ANTERIORES
BASE_CRUZADA as (

select * from BASE_PL a

left join BASE_GRADE b

on a.num_cpf_cliente = b.cpf)

--MOTRA A BASE RESULTANTE 
select  COUNT(*)   from BASE_CRUZADA
where dat_grade is not null

________________________________________________________________________________________________________________________

--ESTUDO EVOLLUCAO PL 06/12

--BASE COM A PRODUÇÃO DE PL DE UM MES
with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202011) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  


--BASE  DE GRADE EM UM INTERVALO DE TEMPO
BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente as cpf, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto_do_grade

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (1,4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202011'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

--CRUZA AS DUAS BASES ANTERIORES
BASE_CRUZADA as (

select * from BASE_PL a

left join BASE_GRADE b

on a.num_cpf_cliente = b.cpf)

--MOTRA A BASE RESULTANTE 
select  *   from BASE_CRUZADA
where dat_grade is not null

________________________________________________________________________________________________________________________

--ESTUDO EVOLLUCAO PL 06/12

--BASE COM A PRODUÇÃO DE PL DE UM MES
create table work_pefisa.k857312_PROD_PL_202111 as

with BASE_PL as (


select * from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = (202111) 
                            and produto = 'PL' ),
                            --and num_anomes_ads_conta <= (202105)  


--BASE  DE GRADE EM UM INTERVALO DE TEMPO
BASE_GRADE as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente as cpf, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto_do_grade

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (1,4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202111'
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') <= '202111'),

--CRUZA AS DUAS BASES ANTERIORES
BASE_CRUZADA as (

select * from BASE_PL a

left join BASE_GRADE b

on a.num_cpf_cliente = b.cpf)

--MOTRA A BASE RESULTANTE 
select  *  from BASE_CRUZADA
where dat_grade is not null

________________________________________________________________________________________________________________________

-- CRIANDO BASE DE ELEGIVEIS AO GRADE PARA ESTUDO DE EVOLUCAO PL > GRADE

with BASE_CONTA as
(
select
  *
from
  (
  select
    A.*,
    row_number()
      over(
        partition by
          num_cpf_cliente
        order by
          num_cpf_cliente,
          (case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
          dth_sit_conta desc
      ) as NUM_LINHA
  from
    unificacao_pefisa.conta A
  where
    id_produto_cartao in (4,8) and cod_sit_conta <> 74) A
where
  NUM_LINHA = 1
  and trim(upper(des_sit_conta)) = 'NORMAL'
  and  dat_referencia >= 20211101
  and  dat_referencia <= 20211130
),

--------------------- BASE DE CONTAS ------------------------

BASE_CAD as
(
select
  cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint) as NUM_CPF,
  max(DAT_DIA_CADASTRO) as DAT_DIA_CADASTRO,
  min(dat_dia_nascimento) as DAT_DIA_NASCIMENTO
from
  dw_incremental.dim_clientes
where
  IND_TITULARIDADE = 1
  and DAT_DIA_CADASTRO is not null
group by
  cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint)
),
--------------------- BASE DE CADASTRO ------------------------

BASE_CAD_DIST as
(
select
  *
from
  BASE_CAD
),
--------------------- BASE DE CADASTRO ------------------------

BHV_NEW_DIST as
(
select
  a.*
from
  ds_risco_behavior_score.etl_modelo_appl_band_neurotech a
where
  cod_prod_cartao in (4,8) 
  and cod_rating_credito_so in (5,6,7,8,9,10,11)
  and dat_referencia >= days_add(date_trunc('day', current_timestamp()),-180)
),
--------------------- BASE DE BEHAVIOUR ------------------------

BASE_JOIN AS
(
select
  current_timestamp() as execucao,
  a.des_sit_conta,
  a.cod_loja_ads_conta,
  b.DAT_DIA_CADASTRO,
  c.*,
  D.`_c0` AS CPF_ANTIGO

FROM 
BASE_CONTA a
  left join
    BASE_CAD_DIST b
      on (a.num_cpf_cliente = b.num_cpf)
  LEFT join
    BHV_NEW_DIST c  
      on (a.num_cpf_cliente = c.num_cpf)
  left join
    work_pefisa.base_elegivel_grade_julho_270d_ascend d
      on a.num_cpf_cliente = CAST(d.`_c0` AS BIGINT)
where
  b.DAT_DIA_CADASTRO <= days_add(date_trunc('day', current_timestamp()),-90)
  and years_add(c.dat_dia_nascimento, 85) >= date_trunc('day', current_timestamp())
  and years_add(c.dat_dia_nascimento, 18) <= date_trunc('day', current_timestamp())
  --and d.num_cpf is null

),

--------------------- BASE DE JOIN/CASE ------------------------
BASE_CASE AS
(
SELECT 
A.*,
(CASE
    WHEN CPF_ANTIGO IS NULL THEN 1
    ELSE 0
END) AS FLAG_NEW
FROM BASE_JOIN A
)
SELECT * from BASE_CASE order by FLAG_NEW desc


________________________________________________________________________________________________________________________

--  BASE  08/12/2021
--  COMPLEMENTO DO ESTUDO DE FPD NO GRADE 
--  USADA PARA PEGAR SÓ 1 MES... DEPOIS JUNTEI COM A BASE DE 2021/01 ATÉ 2021/10
--  DEPOIS SUBI NO HUE ESSA BASE PARA CRUZAR COM A RELAT CONTABIL E PEGAR A LETRA DE RISCO 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') = '202111'),

FILTRO_BHV_JANEIRO AS (

select * from  unificacao_fraude.flx_pernambucanas_grade
where calc_dat_calculo_score <= '2021-11-30 00:00:00'
and resultado_proposta = 'Aprovado'),

-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.calc_rating,
    b.calc_score,
    b.calc_dat_calculo_score,
    b.calc_idade,
    b.calc_limite_global,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_elo_mais,
    b.production_date,
    b.versaopolitica,
    
    row_number()
            over(
                partition by 
                    b.prop_cpf_titular
                order by
                    b.prop_cpf_titular, 
                    b.calc_dat_calculo_score desc
        ) as NUM_LINHA

from EP a
left join  FILTRO_BHV_JANEIRO b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


-- ELIMINANDO AS DUPLICATAS DA BASE_COM_BHV
BASE_COM_BHV as (

select * from BASE_BHV
where NUM_LINHA = 1)

select * from BASE_COM_BHV
where calc_rating is not null

________________________________________________________________________________________________________________________

-- Pegar letra de risco para a base de grade com FPD 09/12/2021

-- drop table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE

-- create table work_pefisa.k857312_ATRASO_ESTUDO_FPD_GRADE as

-- USAR ESSA BASE SELECT * FROM work_pefisa.k857312_estudo_fpd_grade_01a11 

with BASE_1 as (

SELECT

    num_cpf_cliente as cpf,
    calc_idade,
    dat_grade,
    calc_rating,	
    calc_dat_calculo_score

FROM work_pefisa.k857312_estudo_fpd_grade_01a11
where dat_grade = '202105'),

BASE_2 as (

select 

    *,
     row_number()
                        over(
                            partition by 
                                num_cpf_cliente
                            order by
                                num_cpf_cliente, 
                                id_mes_ano_af asc
                    ) as NUM_LINHA

from unificacao_pefisa.relatorio_contabil_audit
where id_mes_ano_af >= 202107), 

BASE_3 as (

select * from BASE_2
where NUM_LINHA = 1),

BASE_4 as (

select 

    a.cpf,
    a.calc_idade,
    a.dat_grade,
    a.calc_rating,
    a.calc_dat_calculo_score,
    b.*

from BASE_1 a
left join BASE_3 b
on cast(a.cpf as bigint) = b.num_cpf_cliente)


select * from BASE_4
__________________________________________________________________________________________________________

-- BASE COMPLEMENTO ESTUDO FPD NO GRADE 10/12/2021


--- Base Grade
with ep as (

select 
    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto
from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),

--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202108)),


--- Cruzamento 1

BASE_CRUZADA_1 as (

select 

a.num_cpf_cliente as cpf,
dat_grade as SAFRA_GRADE,
safra as SAFRA_NR,
a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from ep a
left join base_nr b
on a.num_cpf_cliente = b.num_cpf_cliente
where cast(dat_grade AS INT) <= safra),

--Cruzamento 2

BASE_CRUZADA_2 as (

select *

from BASE_CRUZADA_1 a

left join work_pefisa.k857312_estudo_fpd_grade_01a11 b

on a.cpf = cast(b.num_cpf_cliente as bigint))


select * from BASE_CRUZADA_2

________________________________________________________________________________________________________________________

-- TRATAR DATA
select 

    *,
    concat(substr(cast(safra_grade as string), 1,4), "-" ,
    substr(cast(safra_grade as string), 5,2),"-" ,"01") as data_grade_trat

from BASE_CRUZADA_2

________________________________________________________________________________________________________________________


--10/12/2021

--- BASE 10/12/2021

-- USADA PARA PEGAR SÓ 1 MES... DEPOIS JUNTEI 2021/01 ATÉ 2021/11

-- USADO NO ESTUDO COMPLEMENTAR DE FPD NO GRADE, PEGAR A VALIDADE DE BHV DO PRIMEIRO GRADE DO CLIENTE
-- NA BASE DA NEUROTECH
-- v1

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),


--PEGAR A DATA DO CALCULO DO BHV NA PRIMEIRA VEZ QUE A POLITICA RODOU PARA O GRADE
FILTRO_BHV_JANEIRO AS (

select 
    prop_cpf_titular,
    calc_rating,
    calc_score,
    calc_dat_calculo_score,
    calc_idade,
    calc_limite_global,
    calc_limite_parcela,
    ret_lim_rotativo_elo_mais,
    production_date,
    versaopolitica,
    row_number()
            over(
                partition by 
                    prop_cpf_titular
                order by
                    prop_cpf_titular, 
                    calc_dat_calculo_score asc
        ) as NUM_LINHA

from  unificacao_fraude.flx_pernambucanas_grade

where resultado_proposta = 'Aprovado'),

FILTRO_BHV_JANIERO_2 AS (

select * from FILTRO_BHV_JANEIRO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.*

from EP a
left join FILTRO_BHV_JANIERO_2 b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202112)),


--- Cruzamento 1

BASE_CRUZADA_1 as (

select 

    a.*,
    b.*,
--    a.num_cpf_cliente as cpf,
--    dat_grade as SAFRA_GRADE,
--    safra as SAFRA_NR,
--    a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from BASE_BHV a
left join base_nr b
on a.num_cpf_cliente = b.cpf
where cast(dat_grade AS INT) <= safra),


-- tratando datas
BASE_TRATDATA_1 as (

select 

    *,
    concat(substr(cast(dat_grade as string), 1,4), "-" ,
    substr(cast(dat_grade as string), 5,2),"-" ,"01") as data_grade_trat,
    substr(calc_dat_calculo_score, 1, 10) as data_validade_bhv_trat
    
from BASE_CRUZADA_1)

select    
    *,
    datediff(data_grade_trat, data_validade_bhv_trat) as validade_bhv
    
from BASE_TRATDATA_1 
where dat_grade is not null
order by validade_bhv asc

________________________________________________________________________________________________________________________

-- 13/12/2021
-- USADO NO ESTUDO COMPLEMENTAR DE FPD NO GRADE, PEGAR A VALIDADE DE BHV DO PRIMEIRO GRADE DO CLIENTE
-- NA BASE DA NEUROTECH
-- v1.1

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),


--PEGAR A DATA DO CALCULO DO BHV NA PRIMEIRA VEZ QUE A POLITICA RODOU PARA O GRADE
FILTRO_BHV_JANEIRO AS (

select 
    prop_cpf_titular,
    calc_rating,
    calc_score,
    calc_dat_calculo_score,
    calc_idade,
    calc_limite_global,
    calc_limite_parcela,
    ret_lim_rotativo_elo_mais,
    production_date,
    versaopolitica,
    row_number()
            over(
                partition by 
                    prop_cpf_titular
                order by
                    prop_cpf_titular, 
                    calc_dat_calculo_score asc
        ) as NUM_LINHA

from  unificacao_fraude.flx_pernambucanas_grade

where resultado_proposta = 'Aprovado'),

FILTRO_BHV_JANIERO_2 AS (

select * from FILTRO_BHV_JANEIRO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.*

from EP a
left join FILTRO_BHV_JANIERO_2 b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202112)),


--- Cruzamento 1

BASE_CRUZADA_1 as (

select 

    a.*,
    b.*,
--    a.num_cpf_cliente as cpf,
--    dat_grade as SAFRA_GRADE,
--    safra as SAFRA_NR,
--    a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from BASE_BHV a
left join base_nr b
on a.num_cpf_cliente = b.cpf
where cast(dat_grade AS INT) <= safra),


-- tratando datas
BASE_TRATADA_1 as (

select 

    *,
    concat(substr(cast(dat_grade as string), 1,4), "-" ,
    substr(cast(dat_grade as string), 5,2),"-" ,"01") as data_grade_trat,
    substr(calc_dat_calculo_score, 1, 10) as data_validade_bhv_trat
    
from BASE_CRUZADA_1),

BASE_TRATADA_2 AS (

select    
    *,
    datediff(data_grade_trat, data_validade_bhv_trat) as validade_bhv
    
from BASE_TRATADA_1 )


select * from BASE_TRATADA_2
where validade_bhv > 0

_______________________________________________________________________________________________________________________


-- BASE 13/12/2021
-- USADO NO ESTUDO COMPLEMENTAR DE FPD NO GRADE, PEGAR A VALIDADE DE BHV DO PRIMEIRO GRADE DO CLIENTE
-- NA BASE DA NEUROTECH
-- v1.6

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),


--PEGAR A DATA DO CALCULO DO BHV NA PRIMEIRA VEZ QUE A POLITICA RODOU PARA O GRADE
FILTRO_BHV_JANEIRO AS (

select 
    prop_cpf_titular,
    calc_rating,
    calc_score,
    calc_dat_calculo_score,
    calc_idade,
    calc_limite_global,
    calc_limite_parcela,
    ret_lim_rotativo_elo_mais,
    production_date,
    versaopolitica,
    row_number()
            over(
                partition by 
                    prop_cpf_titular
                order by
                    prop_cpf_titular, 
                    calc_dat_calculo_score asc
        ) as NUM_LINHA

from  unificacao_fraude.flx_pernambucanas_grade

where resultado_proposta = 'Aprovado'),

FILTRO_BHV_JANIERO_2 AS (

select * from FILTRO_BHV_JANEIRO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.*

from EP a
left join FILTRO_BHV_JANIERO_2 b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202112)),


--- Cruzamento 1

BASE_CRUZADA_1 as (

select 

    a.*,
    b.*,
--    a.num_cpf_cliente as cpf,
--    dat_grade as SAFRA_GRADE,
--    safra as SAFRA_NR,
--    a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from BASE_BHV a
left join base_nr b
on a.num_cpf_cliente = b.cpf
where cast(dat_grade AS INT) <= safra),


-- tratando datas
BASE_TRATADA_1 as (

select 

    *,
    concat(substr(cast(dat_grade as string), 1,4), "-" ,
    substr(cast(dat_grade as string), 5,2),"-" ,"01") as data_grade_trat,
    substr(calc_dat_calculo_score, 1, 10) as data_validade_bhv_trat
    
from BASE_CRUZADA_1),

BASE_TRATADA_2 AS (

select    
    *,
    datediff(data_grade_trat, data_validade_bhv_trat) as validade_bhv
    
from BASE_TRATADA_1 ),

BASE_TRATADA_3 AS (

select 

    *,
     case 
        when validade_bhv <= 30 then 30
        when validade_bhv >= 31 and validade_bhv <= 60 then 60
        when validade_bhv >= 61 and validade_bhv <= 90 then 90
        when validade_bhv >= 91 and validade_bhv <= 120 then 120
        when validade_bhv >= 121 and validade_bhv <= 150 then 150
        when validade_bhv >= 151 and validade_bhv <= 180 then 180
        when validade_bhv >= 181 and validade_bhv <= 210 then 210
        when validade_bhv >= 211 and validade_bhv <= 240 then 240
        when validade_bhv >= 241 and validade_bhv <= 270 then 270
        when validade_bhv >= 271 and validade_bhv <= 300 then 300
        when validade_bhv >= 301 and validade_bhv <= 330 then 330
        when validade_bhv >= 331 and validade_bhv <= 360 then 360
        ELSE validade_bhv END AS CATEGORIAS_VAL_BHV

from BASE_TRATADA_2)


--select final com cubo
select 

    count(distinct cpf) as QTDE_CLIENTES,
    dat_grade,
    CALC_RATING,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV
    
from BASE_TRATADA_3
where validade_bhv > 0
group by 
    dat_grade,
    calc_rating,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV
    
--Nº   1997777
--Nº <0 446792


________________________________________________________________________________________________________________________


-- BASE 14/12/2021
-- USADO NO ESTUDO COMPLEMENTAR DE FPD NO GRADE, PEGAR A VALIDADE DE BHV DO PRIMEIRO GRADE DO CLIENTE
-- NA BASE DA NEUROTECH
-- v2.0

--create table work_pefisa.k857312_BASE_COMP_EST_FPD_GRADE as 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),


--PEGAR A DATA DO CALCULO DO BHV NA PRIMEIRA VEZ QUE A POLITICA RODOU PARA O GRADE
FILTRO_BHV_JANEIRO AS (

select 
    data_cod_oper_politica,
    prop_cpf_titular,
    calc_rating,
    calc_score,
    calc_dat_calculo_score,
    calc_idade,
    calc_limite_global,
    calc_limite_parcela,
    ret_lim_rotativo_elo_mais,
    production_date,
    versaopolitica,
    row_number()
            over(
                partition by 
                    prop_cpf_titular
                order by
                    prop_cpf_titular, 
                    calc_dat_calculo_score asc
        ) as NUM_LINHA

from  unificacao_fraude.flx_pernambucanas_grade

where resultado_proposta = 'Aprovado'),

FILTRO_BHV_JANIERO_2 AS (

select * from FILTRO_BHV_JANEIRO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.*

from EP a
left join FILTRO_BHV_JANIERO_2 b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202112)),


--- Cruzamento 1

BASE_CRUZADA_1 as (

select 

    a.*,
    b.*,
--    a.num_cpf_cliente as cpf,
--    dat_grade as SAFRA_GRADE,
--    safra as SAFRA_NR,
--    a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from BASE_BHV a
left join base_nr b
on a.num_cpf_cliente = b.cpf
where cast(dat_grade AS INT) <= safra),


-- tratando datas
BASE_TRATADA_1 as (

select 

    *,
   -- concat(substr(cast(dat_grade as string), 1,4), "-" ,
   --substr(cast(dat_grade as string), 5,2),"-" ,"01") as data_grade_trat,
    substr(cast(data_cod_oper_politica as string), 1, 10) as data_grade_trat,
    substr(calc_dat_calculo_score, 1, 10) as data_validade_bhv_trat
    
from BASE_CRUZADA_1),

BASE_TRATADA_2 AS (

select    
    *,
    datediff(data_grade_trat, data_validade_bhv_trat) as validade_bhv
    
from BASE_TRATADA_1 ),

BASE_TRATADA_3 AS (

select 

    *,
     case 
        when validade_bhv <= 30 then 30
        when validade_bhv >= 31 and validade_bhv <= 60 then 60
        when validade_bhv >= 61 and validade_bhv <= 90 then 90
        when validade_bhv >= 91 and validade_bhv <= 120 then 120
        when validade_bhv >= 121 and validade_bhv <= 150 then 150
        when validade_bhv >= 151 and validade_bhv <= 180 then 180
        when validade_bhv >= 181 and validade_bhv <= 210 then 210
        when validade_bhv >= 211 and validade_bhv <= 240 then 240
        when validade_bhv >= 241 and validade_bhv <= 270 then 270
        when validade_bhv >= 271 and validade_bhv <= 300 then 300
        when validade_bhv >= 301 and validade_bhv <= 330 then 330
        when validade_bhv >= 331 and validade_bhv <= 360 then 360
        ELSE validade_bhv END AS CATEGORIAS_VAL_BHV

from BASE_TRATADA_2)


--select final com cubo
select 

    count(distinct cpf) as QTDE_CLIENTES,
    dat_grade,
    CALC_RATING,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV
    
from BASE_TRATADA_3
where validade_bhv > 0
group by 
    dat_grade,
    calc_rating,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV
    
--Nº   1997777


________________________________________________________________________________________________________________________



-- BASE 14/12/2021
-- USADO NO ESTUDO COMPLEMENTAR DE FPD NO GRADE,
-- AGREGANDO INFORMACOES DA BASE DE GRADE DA NEUROTECH A BASE DE FPD NO GRADE
-- v2.8

--drop table work_pefisa.k857312_BASE_COMP_EST_FPD_GRADE
--create table work_pefisa.k857312_BASE_COMP_EST_FPD_GRADE as 

with EP as (

select 

    distinct
    from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') as dat_grade, 
    num_cpf_cliente, 
    case 
        when id_produto_ccred_destino in (5,9) then 'ELO Mais'
        when id_produto_ccred_destino in (6,10)  then 'ELO Grafite'
        else 'Outro' end as produto

from unificacao_pefisa.grade_produto                                                                                                 
where id_produto_ccred_destino IN (5,6,9,10)                                                                                                    
and id_produto_ccred_origem in (1,4,8)                                                                                  
and from_timestamp(dth_solicitacao_grade_produto, 'yyyyMM') >= '202101'),


--PEGAR A DATA DO CALCULO DO BHV NA PRIMEIRA VEZ QUE A POLITICA RODOU PARA O GRADE
FILTRO_BHV_JANEIRO AS (

select 
    data_cod_oper_politica,
    prop_cpf_titular,
    calc_rating,
    calc_score,
    calc_dat_calculo_score,
    calc_idade,
    calc_limite_global,
    calc_limite_parcela,
    ret_lim_rotativo_elo_mais,
    production_date,
    versaopolitica,
    row_number()
            over(
                partition by 
                    prop_cpf_titular
                order by
                    prop_cpf_titular, 
                    calc_dat_calculo_score asc
        ) as NUM_LINHA

from  unificacao_fraude.flx_pernambucanas_grade

where resultado_proposta = 'Aprovado'),

FILTRO_BHV_JANIERO_2 AS (

select * from FILTRO_BHV_JANEIRO
where NUM_LINHA = 1),


-- ADICIONANDO O BHV A EP
BASE_BHV as (

select 

   	a.*,
    b.*

from EP a
left join FILTRO_BHV_JANIERO_2 b
on cast(a.num_cpf_cliente as bigint) = cast(b.prop_cpf_titular as bigint)),


--- Base Nível de Risco
base_nr as (
select 
    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202112)),


-- CRUZAMENTO 1
BASE_CRUZADA_1 as (

select 

    a.*,
    b.*,
--    a.num_cpf_cliente as cpf,
--    dat_grade as SAFRA_GRADE,
--    safra as SAFRA_NR,
--    a.produto as prod,

case 
    when des_nivel_risco = 'H' and tip_carteira = 'N' then 'HN'
    when des_nivel_risco = 'H' and tip_carteira = 'I' then 'HI'
    ELSE des_nivel_risco END AS ATRASO

from BASE_BHV a
left join base_nr b
on a.num_cpf_cliente = b.cpf
where cast(dat_grade AS INT) <= safra),


--TRATANDO AS DATAS
BASE_TRATADA_1 as (

select 

    *,
   --concat(substr(cast(dat_grade as string), 1,4), "-" ,
   --substr(cast(dat_grade as string), 5,2),"-" ,"01") as data_grade_trat,

    substr(cast(data_cod_oper_politica as string), 1, 10) as data_grade_trat,
    substr(calc_dat_calculo_score, 1, 10) as data_validade_bhv_trat
    
from BASE_CRUZADA_1),

--CALCULANDO VALIDADE DO BHV EM DIAS
BASE_TRATADA_2 AS (

select    
    *,
    datediff(data_grade_trat, data_validade_bhv_trat) as validade_bhv
    
from BASE_TRATADA_1 ),


--CATEGORIZANDO VALIDADE BHV
BASE_TRATADA_3 AS (

select 

    *,
     case 
        when validade_bhv <= 30 then 30
        when validade_bhv >= 31 and validade_bhv <= 60 then 60
        when validade_bhv >= 61 and validade_bhv <= 90 then 90
        when validade_bhv >= 91 and validade_bhv <= 120 then 120
        when validade_bhv >= 121 and validade_bhv <= 150 then 150
        when validade_bhv >= 151 and validade_bhv <= 180 then 180
        when validade_bhv >= 181 and validade_bhv <= 210 then 210
        when validade_bhv >= 211 and validade_bhv <= 240 then 240
        when validade_bhv >= 241 and validade_bhv <= 270 then 270
        when validade_bhv >= 271 and validade_bhv <= 300 then 300
        when validade_bhv >= 301 and validade_bhv <= 330 then 330
        when validade_bhv >= 331 and validade_bhv <= 360 then 360
        ELSE validade_bhv END AS CATEGORIAS_VAL_BHV

from BASE_TRATADA_2)


--SELECT FINAL
select 

    count(distinct cpf) as QTDE_CLIENTES,
    dat_grade,
    CALC_RATING,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV
    
from BASE_TRATADA_3

where validade_bhv > 0

group by 
    dat_grade,
    calc_rating,
    calc_idade,
    safra,
    atraso,
    CATEGORIAS_VAL_BHV

________________________________________________________________________________________________________________________


--BASE ESTUDO COMPLEMENTAR FPD NO BAND E PL 

--create table work_pefisa.k860322_Mar_aberto_PL_BAND_final as
-- BASE PRODUCAO PL/BAND COM RATING 
with BASE AS (

select * from work_pefisa.k860332_Mar_aberto_PL_BAND_final),

-- BASE NÍVEL DE RISCO
BASE_NR as (

select 

    id_mes_ano_af as safra, 
    num_cpf_cliente as cpf, 
    des_nivel_risco, 
    tip_carteira, 
    val_saldo_contabil
    
from unificacao_pefisa.relatorio_contabil_audit 
where id_mes_ano_af >= (202101) 
and id_mes_ano_af <= (202111)),

-- BASE CRUZAMENTO
BASE_CRUZADA as (

select 

    a.*,
    b.safra as safra_nr,
    b.des_nivel_risco,
        row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente
                order by -- organizado por 
                    num_cpf_cliente, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    safra desc -- data descendente
        ) as NUM_LINHA
    
    
from BASE a

left join BASE_NR b
on a.num_cpf_cliente = b.cpf),


-- BASE CUBO
BASE_CUBO AS (

select 

    count(distinct num_cpf_cliente) as QTDE_CLIENTES,
    produto,
    num_anomes_ads_conta,
    idade,
    rating_decisao_final,
    safra_nr,
    des_nivel_risco
    
from BASE_CRUZADA    

group by

    produto,
    num_anomes_ads_conta,
    idade,
    rating_decisao_final,
    safra_nr,
    des_nivel_risco)

-- SELECT FINAL    
select * from BASE_CUBO
________________________________________________________________________________________________________________________

--BASE CHECK ACOES FIM DE ANO 03/01/2022

-- table work_pefisa.k860332_base_up_limites_202111 as


with BASE_CONTA as
(
select
    *
from
    (select
        A.*,
        row_number()
            over(
                partition by
                    num_cpf_cliente
                order by
                    num_cpf_cliente, 
                    (case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    dth_sit_conta desc,
                    dth_ult_atu_so DESC
        ) as NUM_LINHA  
    from
        unificacao_pefisa.conta A
    where
        id_produto_cartao <> 7
        and cod_sit_conta <> 74
    ) A
where
    NUM_LINHA = 1   
    AND trim(upper(des_sit_conta)) = 'NORMAL' 
),

--------------------- BASE DE CONTAS ------------------------
BASE_CAD as
(
    select
        cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint) as NUM_CPF,
        max(DAT_DIA_CADASTRO) as DAT_DIA_CADASTRO,
        min(dat_dia_nascimento) as DAT_DIA_NASCIMENTO
    from
        dw_incremental.dim_clientes 
    where
        IND_TITULARIDADE = 1
        and DAT_DIA_CADASTRO is not null
    group by
        cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint)
),

--------------------- BASE DE CADASTRO ------------------------

BASE_CAD_DIST as
(
select
    *
from
    BASE_CAD
),
--------------------- BASE DE CADASTRO ------------------------

BHV_NEW_DIST as
(
select 
    a.*,
    tRUNC(months_between('2021-01-31', dat_dia_nascimento)/12) as idade
from 
    ds_risco_behavior_score.etl_modelo_appl_band_neurotech a
where 
    dat_referencia >= days_add(date_trunc('day', current_timestamp()),-360)
),
--------------------- BASE DE BEHAVIOUR ------------------------


BASE_LIMITE AS
(
SELECT 
    cast(num_cpf_cliente as bigint) as cpf,
    cast(id_conta as int) as conta,
    val_disp_global_credito,
    val_disp_parcela_nac,
    val_limite_global_credito,
    val_limite_parcelas_nac,
    val_limite_maximo,  
    dth_ult_atu_so 
FROM 
(select A.*  
     ,row_number() 
     over(partition by 
        num_cpf_cliente 
            ORDER BY 
                num_cpf_cliente,
                dth_ult_atu_so DESC ) 
            AS NUM_LINHA  
     FROM 
         base_operacional.limite_disponibilidade_pos_mensal A 
        where 
        id_produto_cartao <> 7   ) A
     where 
        NUM_LINHA = 1
),
---------- BASE SALDO --------

 BASE_CONT AS
    (
    SELECT
      ID_MES_ANO_AF AS SAFRA_NR,
      NUM_CPF_CLIENTE AS NUM_CPF,
      TIP_CARTEIRA,
      (CASE
        WHEN des_nivel_risco IS NULL THEN 'H'
        ELSE des_nivel_risco
      END) AS NIVEL_RISCO,
      val_saldo_contabil AS SDO_CONT,
      VAL_SALDO_DEVEDOR,
      (CASE
        WHEN TRIM(des_nivel_risco) = 'AA' THEN 0
        WHEN TRIM(des_nivel_risco) = 'A'  THEN 14
        WHEN TRIM(des_nivel_risco) = 'B'  THEN 30
        WHEN TRIM(des_nivel_risco) = 'C'  THEN 60
        WHEN TRIM(des_nivel_risco) = 'D'  THEN 90
        WHEN TRIM(des_nivel_risco) = 'E'  THEN 120
        WHEN TRIM(des_nivel_risco) = 'F'  THEN 150
        WHEN TRIM(des_nivel_risco) = 'G'  THEN 180
        WHEN TRIM(des_nivel_risco) = 'H'  AND TRIM(TIP_CARTEIRA) = 'N' THEN 360
        WHEN TRIM(des_nivel_risco) IS NULL AND TRIM(TIP_CARTEIRA) = 'N' THEN 360
        ELSE 361
      END) AS ATRASO,
      (CASE
        WHEN COD_GRUPO_ECONOMICO IN (53, 55,62,66,71, 85, 86, 87, 94, 95)         THEN 1 --BAND
        WHEN COD_GRUPO_ECONOMICO IN (4, 80, 81, 90, 91, 72, 75, 96,97)            THEN 2 --PL
        WHEN COD_GRUPO_ECONOMICO in   (57,63,67, 88)                              THEN 3 --ACORDO BAND
        WHEN COD_GRUPO_ECONOMICO in   (58,73,76)                                  THEN 4 --ACORDO PL
        WHEN COD_GRUPO_ECONOMICO IN (36, 56,82,83)                                THEN 5 --REPAC
        WHEN COD_GRUPO_ECONOMICO IN (64,68,74,77,84,89)                           THEN 6 --QUEBRA
                                                                                  ELSE 7--OUTROS
      END) AS PRODUTO
    FROM 
          unificacao_pefisa.relatorio_contabil_audit A

    WHERE 
     VAL_SALDO_DEVEDOR > 0
    ),
    
    BASE_CONT_SAFRA AS
    (
    SELECT
      NUM_CPF,
      SAFRA_NR AS SAFRA_NR,
      MAX(ATRASO) AS ATRASO,
      SUM(VAL_SALDO_DEVEDOR) AS VAL_SALDO_DEVEDOR,
      SUM(SDO_CONT) AS SDO_CONT,
      --MIN(NVL(NVL(DAT_ULT_VENCTO, DAT_VENCTO_PAR_MAIOR_ATRS), TO_DATE('31/12/2025', 'DD/MM/YYYY'))) AS DAT_ULT_VENCTO,
      Min(PRODUTO) AS PRODUTO,
      Max(NIVEL_RISCO) as nivel_risco
    FROM 
     BASE_CONT
     WHERE
     SAFRA_NR = 202110
    GROUP BY 
      SAFRA_NR,
      NUM_CPF
    ),

------- BASE VINCULAÇÃO -----
vinculacaoBand as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
 from work_pefisa.k821082_base_acoes3_vinc_lim_compl ),
 
vinculacaoPL as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
from  work_pefisa.k821082_base_acoes3_vinc_grade_compl
),

BaseVinculacao as (
select * from vinculacaoBand 
union
select * from vinculacaoPL),
                    

--------------------- BASE DE LIMITE ------------------------

BASE_ANALITICA AS
(

select
   a.num_cpf_cliente,
   date_trunc ('day', current_timestamp()) as execucao, 
    a.des_sit_conta,
    a.id_produto_cartao,
    b.DAT_DIA_CADASTRO,
    c.*,
    D.ATRASO,
    D.SDO_CONT,
    D.NIVEL_RISCO,
    D.SAFRA_NR,
    E.*,
    f.nivel_vinc_tratada AS nivel_vinc_tratada,
    f.FLAG_PL_ATU, 
    f.FLAG_CONTA_NAOAPTA_ATU
from
        BASE_CONTA a
    left join
        BASE_CAD_DIST b
            on (a.num_cpf_cliente = b.num_cpf)
    left join
        BHV_NEW_DIST c
            on (a.num_cpf_cliente = c.num_cpf)
    LEFT JOIN 
        BASE_CONT_SAFRA D
            ON (a.num_cpf_cliente = D.num_cpf)
    left join
        BASE_LIMITE E
            on (a.num_cpf_cliente = E.CPF)
    left join 
        BaseVinculacao f
            on (a.num_cpf_cliente = f.NUM_CPF_CNPJ_CLIENTE))
/*where
    b.DAT_DIA_CADASTRO <= days_add(date_trunc('day', current_timestamp()),-90)
    and years_add(c.dat_dia_nascimento, 80) >= date_trunc('day', current_timestamp())
    and years_add(c.dat_dia_nascimento, 18) <= date_trunc('day', current_timestamp())
    --and d.num_cpf is null
    */
    
    
select count(*) from BASE_ANALITICA




-------------



-- table work_pefisa.k860332_base_up_limites_202111 as


with BASE_CONTA as
(
select
    *
from
    (select
        A.*,
        row_number()
            over(
                partition by
                    num_cpf_cliente
                order by
                    num_cpf_cliente, 
                    (case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    dth_sit_conta desc,
                    dth_ult_atu_so DESC
        ) as NUM_LINHA  
    from
        unificacao_pefisa.conta A
    where
        id_produto_cartao <> 7
        and cod_sit_conta <> 74
    ) A
where
    NUM_LINHA = 1   
    AND trim(upper(des_sit_conta)) = 'NORMAL' 
),

--------------------- BASE DE CONTAS ------------------------
BASE_CAD as
(
    select
        cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint) as NUM_CPF,
        max(DAT_DIA_CADASTRO) as DAT_DIA_CADASTRO,
        min(dat_dia_nascimento) as DAT_DIA_NASCIMENTO
    from
        dw_incremental.dim_clientes 
    where
        IND_TITULARIDADE = 1
        and DAT_DIA_CADASTRO is not null
    group by
        cast(REGEXP_REPLACE(NUM_CPF, '[^0-9]+', '') as bigint)
),

--------------------- BASE DE CADASTRO ------------------------

BASE_CAD_DIST as
(
select
    *
from
    BASE_CAD
),
--------------------- BASE DE CADASTRO ------------------------

BHV_NEW_DIST as
(
select 
    a.*,
    tRUNC(months_between('2021-01-31', dat_dia_nascimento)/12) as idade
from 
    ds_risco_behavior_score.etl_modelo_appl_band_neurotech a
where 
    dat_referencia >= days_add(date_trunc('day', current_timestamp()),-360)
),
--------------------- BASE DE BEHAVIOUR ------------------------


BASE_LIMITE AS
(
SELECT 
    cast(num_cpf_cliente as bigint) as cpf,
    cast(id_conta as int) as conta,
    val_disp_global_credito,
    val_disp_parcela_nac,
    val_limite_global_credito,
    val_limite_parcelas_nac,
    val_limite_maximo,  
    dth_ult_atu_so 
FROM 
(select A.*  
     ,row_number() 
     over(partition by 
        num_cpf_cliente 
            ORDER BY 
                num_cpf_cliente,
                dth_ult_atu_so DESC ) 
            AS NUM_LINHA  
     FROM 
         base_operacional.limite_disponibilidade_pos_mensal A 
        where 
        id_produto_cartao <> 7   ) A
     where 
        NUM_LINHA = 1
),
---------- BASE SALDO --------

 BASE_CONT AS
    (
    SELECT
      ID_MES_ANO_AF AS SAFRA_NR,
      NUM_CPF_CLIENTE AS NUM_CPF,
      TIP_CARTEIRA,
      (CASE
        WHEN des_nivel_risco IS NULL THEN 'H'
        ELSE des_nivel_risco
      END) AS NIVEL_RISCO,
      val_saldo_contabil AS SDO_CONT,
      VAL_SALDO_DEVEDOR,
      (CASE
        WHEN TRIM(des_nivel_risco) = 'AA' THEN 0
        WHEN TRIM(des_nivel_risco) = 'A'  THEN 14
        WHEN TRIM(des_nivel_risco) = 'B'  THEN 30
        WHEN TRIM(des_nivel_risco) = 'C'  THEN 60
        WHEN TRIM(des_nivel_risco) = 'D'  THEN 90
        WHEN TRIM(des_nivel_risco) = 'E'  THEN 120
        WHEN TRIM(des_nivel_risco) = 'F'  THEN 150
        WHEN TRIM(des_nivel_risco) = 'G'  THEN 180
        WHEN TRIM(des_nivel_risco) = 'H'  AND TRIM(TIP_CARTEIRA) = 'N' THEN 360
        WHEN TRIM(des_nivel_risco) IS NULL AND TRIM(TIP_CARTEIRA) = 'N' THEN 360
        ELSE 361
      END) AS ATRASO,
      (CASE
        WHEN COD_GRUPO_ECONOMICO IN (53, 55,62,66,71, 85, 86, 87, 94, 95)         THEN 1 --BAND
        WHEN COD_GRUPO_ECONOMICO IN (4, 80, 81, 90, 91, 72, 75, 96,97)            THEN 2 --PL
        WHEN COD_GRUPO_ECONOMICO in   (57,63,67, 88)                              THEN 3 --ACORDO BAND
        WHEN COD_GRUPO_ECONOMICO in   (58,73,76)                                  THEN 4 --ACORDO PL
        WHEN COD_GRUPO_ECONOMICO IN (36, 56,82,83)                                THEN 5 --REPAC
        WHEN COD_GRUPO_ECONOMICO IN (64,68,74,77,84,89)                           THEN 6 --QUEBRA
                                                                                  ELSE 7--OUTROS
      END) AS PRODUTO
    FROM 
          unificacao_pefisa.relatorio_contabil_audit A

    WHERE 
     VAL_SALDO_DEVEDOR > 0
    ),
    
    BASE_CONT_SAFRA AS
    (
    SELECT
      NUM_CPF,
      SAFRA_NR AS SAFRA_NR,
      MAX(ATRASO) AS ATRASO,
      SUM(VAL_SALDO_DEVEDOR) AS VAL_SALDO_DEVEDOR,
      SUM(SDO_CONT) AS SDO_CONT,
      --MIN(NVL(NVL(DAT_ULT_VENCTO, DAT_VENCTO_PAR_MAIOR_ATRS), TO_DATE('31/12/2025', 'DD/MM/YYYY'))) AS DAT_ULT_VENCTO,
      Min(PRODUTO) AS PRODUTO,
      Max(NIVEL_RISCO) as nivel_risco
    FROM 
     BASE_CONT
     WHERE
     SAFRA_NR = 202110
    GROUP BY 
      SAFRA_NR,
      NUM_CPF
    ),

------- BASE VINCULAÇÃO -----
vinculacaoBand as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
 from work_pefisa.k821082_base_acoes3_vinc_lim_compl ),
 
vinculacaoPL as (
 select NUM_CPF_CNPJ_CLIENTE,
        nivel_vinc_tratada AS nivel_vinc_tratada,
        FLAG_PL_ATU AS FLAG_PL_ATU, 
        fLAG_CONTA_NAOAPTA_ATU AS fLAG_CONTA_NAOAPTA_ATU
from  work_pefisa.k821082_base_acoes3_vinc_grade_compl
),

BaseVinculacao as (
select * from vinculacaoBand 
union
select * from vinculacaoPL),
                    

--------------------- BASE DE LIMITE ------------------------

BASE_ANALITICA AS
(

select
   a.num_cpf_cliente,
   date_trunc ('day', current_timestamp()) as execucao, 
    a.des_sit_conta,
    a.id_produto_cartao,
    b.DAT_DIA_CADASTRO,
    c.*,
    D.ATRASO,
    D.SDO_CONT,
    D.NIVEL_RISCO,
    D.SAFRA_NR,
    E.*,
    f.nivel_vinc_tratada AS nivel_vinc_tratada,
    f.FLAG_PL_ATU, 
    f.FLAG_CONTA_NAOAPTA_ATU
from
        BASE_CONTA a
    left join
        BASE_CAD_DIST b
            on (a.num_cpf_cliente = b.num_cpf)
    left join
        BHV_NEW_DIST c
            on (a.num_cpf_cliente = c.num_cpf)
    LEFT JOIN 
        BASE_CONT_SAFRA D
            ON (a.num_cpf_cliente = D.num_cpf)
    left join
        BASE_LIMITE E
            on (a.num_cpf_cliente = E.CPF)
    left join 
        BaseVinculacao f
            on (a.num_cpf_cliente = f.NUM_CPF_CNPJ_CLIENTE))
/*where
    b.DAT_DIA_CADASTRO <= days_add(date_trunc('day', current_timestamp()),-90)
    and years_add(c.dat_dia_nascimento, 80) >= date_trunc('day', current_timestamp())
    and years_add(c.dat_dia_nascimento, 18) <= date_trunc('day', current_timestamp())
    --and d.num_cpf is null
    */
    
    
select count(*) from BASE_ANALITICA

where cod_rating_credito_so in (7,8,9,10,11)
and des_sit_conta = 'Normal'
and id_produto_cartao in (1,4,2,3,5,6)

________________________________________________________________________________________________________________________

--DIST CLIENTES POR RATING DE BHV PL E BAND PARA ATUALIZAR A % CLIENTES NA TABELA MESTRE


-- BAND

SELECT  count(*)
FROM ds_risco_behavior_score.fat_modelo_bhs_band   
WHERE safra = 202112
-- 957474




SELECT cod_rating_credito, count(cod_rating_credito)
FROM ds_risco_behavior_score.fat_modelo_bhs_band   
WHERE safra = 202112
GROUP BY cod_rating_credito
ORDER BY cod_rating_credito ASC


-----------------------------

-- PL

SELECT COUNT(*)
FROM ds_risco_behavior_score.fat_modelo_bhs_PL_digital
WHERE safra = 202112
--466155


SELECT cod_rating_credito, count(cod_rating_credito)
FROM ds_risco_behavior_score.fat_modelo_bhs_PL_digital
WHERE safra = 202112
GROUP BY cod_rating_credito
order by cod_rating_credito asc

________________________________________________________________________________________________________________________


-- calibração politica pegando produção pl e juntando com letra de risco e rating 05/01/22


with 

BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = 202106
                            and produto in ('PL')),
 

BASE_RATING as (

SELECT

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA


FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20210601 and production_date <= 20210630
and prop_politica = 'P1A'
and calc_produto in ('1','4','8') 
and resultado_proposta = 'Aprovado'),

FILTRO1 as (

select * from BASE_RATING
where NUM_LINHA = 1),


BASE_CRUZAMENTO1 AS (

select 

    a.num_cpf_cliente,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint))


select * from BASE_CRUZAMENTO1



FILTRO2_BASE_RELAT AS (

select 

    *

FROM unificacao_pefisa.relatorio_contabil_audit

WHERE id_mes_ano_af = 202112),


FILTRO3_BASE_RELAT as (

select 
    *,
      row_number()
                over(
                    partition by 
                        num_cpf_cliente
                    order by
                        num_cpf_cliente, 
                        id_mes_ano_af desc
            ) as NUM_LINHA

from FILTRO2_BASE_RELAT),

FILTRO4_BASE_RELAT AS (

select 

     *,
     num_cpf_cliente AS CPF
     
from FILTRO3_BASE_RELAT
WHERE NUM_LINHA = 1),


BASE_CRUZAMENTO2 AS (

select 

    a.*,
    b.*

FROM BASE_CRUZAMENTO1 A
left join FILTRO4_BASE_RELAT B
ON CAST(A.num_cpf_cliente AS bigint) = cast(B.cpf as bigint))


select count(*) FROM BASE_CRUZAMENTO2
where rating_decisao_final is not null

--null 30k
--not null 60k
--total 89k


________________________________________________________________________________________________________________________

--  CALIBRAÇÃO POLITICA, PEGANDO PRODUÇÃO PL E BAND, JUNTANDO COM A LETRA DE RISCO
--  E RATING NA CONCESSAO 07/01/2022

with 

-------------------------- BASE PRODUCAO PL EM JUNHO DE 2021 --------------------------

BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta = 202106
                            and produto in ('PL', 'ELO Mais' )),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM JUNHO DE 2021 DE PL (PEGAR RATING) PNB PF---------

BASE_RATING_PF as (

SELECT

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20210601 and production_date <= 20210630
and prop_politica = 'P1A'
--and calc_produto in ('1','4','8') 
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM JUNHO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20210601 and production_date <= 20210630
and prop_politica = 'P01'
--and calc_produto in ('1','4','8') 
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 

    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


--------------- FILTRO2 PEGANDO LETRA DE RISCO EM DEZEMBRO DE 2021 --------------------

FILTRO2_BASE_RELAT AS (

select

    *
    
FROM unificacao_pefisa.relatorio_contabil_audit

WHERE id_mes_ano_af = 202112),
---------------------------------------------------------------------------------------


--------------------------- FILTRO3 RETIRANDO DUPLICATAS ------------------------------

FILTRO3_BASE_RELAT as (

select 
    *,
      row_number()
                over(
                    partition by 
                        num_cpf_cliente
                    order by
                        num_cpf_cliente, 
                        id_mes_ano_af desc
            ) as NUM_LINHA

from FILTRO2_BASE_RELAT),
---------------------------------------------------------------------------------------


--------------------------- FILTRO4 PEGANDO LETRA DE RISCO-----------------------------
FILTRO4_BASE_RELAT AS (

select 

    num_cpf_cliente as cpf,
    id_mes_ano_af,
    des_nivel_risco,
    id_produto_cartao,
    num_dias_atraso_cliente

from FILTRO3_BASE_RELAT
WHERE NUM_LINHA = 1),
---------------------------------------------------------------------------------------

------------------------- CRUZAMENTO2, AGREGANDO LETRA DE RISCO ------------------------
BASE_CRUZAMENTO2 AS (

select 

    a.*,
    b.*

FROM BASE_CRUZAMENTO1 A
left join FILTRO4_BASE_RELAT B
ON CAST(A.num_cpf_cliente AS bigint) = cast(B.cpf as bigint))
---------------------------------------------------------------------------------------


--------------------------------- SELECT FINAL ----------------------------------------

select * FROM BASE_CRUZAMENTO2
where rating_decisao_final is not null
---------------------------------------------------------------------------------------

--null 2175
--not null 97530
--total 99k
________________________________________________________________________________________________________________________

-- REDUÇÃO DE LIMITES, R$ 300,00 PARA TODOS OS CLIENTES COM RATING BHV 1,2 E 3 NO BAND. 11/01/2022
--DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 
--V1 ESSA BASE NAO LEVA EM CONTA O STATUS DA BASE CONTA, SÓ DA BASE DE BHV 


DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 

create table work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND as 

with BASE_BAND AS (

SELECT 
        *,
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf
                order by -- organizado por 
                    num_cpf, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    safra desc -- data descendente
        ) as NUM_LINHA

FROM ds_risco_behavior_score.fat_modelo_bhs_band
where cod_rating_credito in (1,2,3)),

FILTRO1 AS (
select * from BASE_BAND
WHERE NUM_LINHA = 1),

BASE_LIMITES AS (

SELECT * from base_operacional.limite_disponibilidade_pos_mensal
where num_anomes_posicao_limite = 202201
and val_limite_maximo > 300
and id_produto_cartao in (2,3,5,6,9,10)
and upper(des_sit_conta) = 'NORMAL'),


CRUZAMENTO1 AS (

SELECT * FROM FILTRO1 A
LEFT JOIN BASE_LIMITES B
ON A.num_cpf = b.num_cpf_cliente),

BASE_VINC as (

SELECT 

    at872604_base_vinc_vcli_niv_vinc_202112.num_cpf_cnpj_cliente as cpf,
    at872604_base_vinc_vcli_niv_vinc_202112.safra_ref as safra_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.id_produto_cartao as produto,
    at872604_base_vinc_vcli_niv_vinc_202112.cod_sit_conta as sit_conta,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc as nivel_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_tratada as nivel_vinc_tratada,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_nome as nivel_vinc_nome

from work_pefisa.at872604_base_vinc_vcli_niv_vinc_202112),

CRUZAMENTO2 AS (

select * from CRUZAMENTO1 A
left join BASE_VINC B
ON A.num_cpf = B.cpf),


BASE_FUNCIONARIO AS (

select 

cast(REGEXP_REPLACE(num_cpf, '[^0-9]+', '') as bigint) AS CPF_FUNCIONARIO

from dw_incremental.dw_funcionario),

CRUZAMENTO3 AS (

select 
    
    *

FROM CRUZAMENTO2 A
left join BASE_FUNCIONARIO B
ON A.num_cpf = B.CPF_FUNCIONARIO
where B.CPF_FUNCIONARIO is null)


select *
from CRUZAMENTO3
where val_limite_global_credito is not null
and val_limite_maximo is not null

________________________________________________________________________________________________________________________


-- REDUÇÃO DE LIMITES, R$ 300,00 PARA TODOS OS CLIENTES COM RATING BHV 1,2 E 3 NO BAND. 12/01/2022
--DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 

--V2 ESSA BASE PEGA O STATUS DA BASE CONTA.

DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 

create table work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND as 

with BASE_BAND AS (

SELECT 
        *,
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf
                order by -- organizado por 
                    num_cpf, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    safra desc -- data descendente
        ) as NUM_LINHA

FROM ds_risco_behavior_score.fat_modelo_bhs_band
where cod_rating_credito in (1,2,3)),

FILTRO1 AS (
select * from BASE_BAND
WHERE NUM_LINHA = 1),

BASE_LIMITES AS (

SELECT * from base_operacional.limite_disponibilidade_pos_mensal
where num_anomes_posicao_limite = 202201
and val_limite_maximo > 300
and id_produto_cartao in (2,3,5,6,9,10)),

CRUZAMENTO1 AS (

SELECT * FROM FILTRO1 A
LEFT JOIN BASE_LIMITES B
ON A.num_cpf = b.num_cpf_cliente),


BASE_CONTA as (

select 
        num_cpf_cliente,
        dat_referencia,
        des_sit_conta,
        id_produto_cartao,
        
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente
                order by -- organizado por 
                    num_cpf_cliente, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    dat_referencia desc -- data descendente
        ) as NUM_LINHA

from unificacao_pefisa.conta
where id_produto_cartao in (2,3,5,6,9,10)),

FILTRO2 AS (

SELECT 

        num_cpf_cliente as cpf_base_conta,
        dat_referencia as referencia_conta,
        des_sit_conta as situacao_conta,
        id_produto_cartao as produto_conta

FROM BASE_CONTA
WHERE NUM_LINHA = 1),

CRUZAMENTO2 AS (

select * FROM CRUZAMENTO1 A
left join FILTRO2 B
ON A.num_cpf = B.cpf_base_conta),


BASE_VINC as (

SELECT 

    at872604_base_vinc_vcli_niv_vinc_202112.num_cpf_cnpj_cliente as cpf,
    at872604_base_vinc_vcli_niv_vinc_202112.safra_ref as safra_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.id_produto_cartao as produto,
    at872604_base_vinc_vcli_niv_vinc_202112.cod_sit_conta as sit_conta,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc as nivel_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_tratada as nivel_vinc_tratada,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_nome as nivel_vinc_nome

from work_pefisa.at872604_base_vinc_vcli_niv_vinc_202112),


CRUZAMENTO3 AS (

select * from CRUZAMENTO2 A
left join BASE_VINC B
ON A.num_cpf = B.cpf),


BASE_FUNCIONARIO AS (

select 

cast(REGEXP_REPLACE(num_cpf, '[^0-9]+', '') as bigint) AS CPF_FUNCIONARIO

from dw_incremental.dw_funcionario),

CRUZAMENTO4 AS (

select 
    
    *

FROM CRUZAMENTO3 A
left join BASE_FUNCIONARIO B
ON A.num_cpf = B.CPF_FUNCIONARIO
where B.CPF_FUNCIONARIO is null)


select count(*)
from CRUZAMENTO4
where val_limite_global_credito is not null
and val_limite_maximo is not null
and upper(situacao_conta) = 'NORMAL'

--523472

________________________________________________________________________________________________________________________

--REDUÇÃO DE LIMITES, R$ 300,00 PARA TODOS OS CLIENTES COM RATING BHV 1,2 E 3 NO BAND. 13/01/2022
--DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 
--V2 ESSA BASE PEGA O STATUS DA BASE CONTA.

--DROP TABLE work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND 

--create table work_pefisa.k857312_ACAO_BASE_REDUCAO_LIM_BAND as 

------------------------ BASE CONTENDO OS BHV´S DO BAND APENAS RATING (1,2,3) -------------------
with BASE_BAND AS (

SELECT 
        num_cpf,
        tipo_cartao,
        cod_rating_credito,
        
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf
                order by -- organizado por 
                    num_cpf, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    safra desc -- data descendente
        ) as NUM_LINHA

FROM ds_risco_behavior_score.fat_modelo_bhs_band
where cod_rating_credito in (1,2,3)),
-------------------------------------------------------------------------------------------------

FILTRO1 AS (
select 

    num_cpf,
    tipo_cartao,
    cod_rating_credito

from BASE_BAND
WHERE NUM_LINHA = 1),

------------------ BASE DE LIMITES PARA PEGAR TODOS OS LIMITES MAIORES QUE R$ 300 -----------------
BASE_LIMITES AS (

SELECT 

    num_cpf_cliente as cpf_base_limite,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_global_credito as limite_def_app,
    id_produto_cartao
    
from base_operacional.limite_disponibilidade_pos_mensal
where num_anomes_posicao_limite = 202201
and val_limite_maximo > 300
and id_produto_cartao in (2,3,5,6,9,10)),
---------------------------------------------------------------------------------------------------

------- CRUZAMENTO ENTRE A BASE A (DE BHV´S FILTRADAS SEM DUPLICIDADE) E AGREGANDO OS LIMITES -----
CRUZAMENTO1 AS (

SELECT 
    * 
FROM FILTRO1 A
LEFT JOIN BASE_LIMITES B
ON A.num_cpf = b.cpf_base_limite),
---------------------------------------------------------------------------------------------------

------------------------BASE CONTA USADA PARA AGREGAR A SITUACAO DA CONTA -------------------------
BASE_CONTA as (

select 
        num_cpf_cliente,
        dat_referencia,
        des_sit_conta,
        id_produto_cartao,
        
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente
                order by -- organizado por 
                    num_cpf_cliente, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    dat_referencia desc -- data descendente
        ) as NUM_LINHA

from unificacao_pefisa.conta
where id_produto_cartao in (2,3,5,6,9,10)),
---------------------------------------------------------------------------------------------------

FILTRO2 AS (

SELECT 

        num_cpf_cliente as cpf_base_conta,
        dat_referencia as referencia_conta,
        des_sit_conta as situacao_conta,
        id_produto_cartao as produto_conta

FROM BASE_CONTA
WHERE NUM_LINHA = 1),

--------------------------- CRUZAMENTO ENTRE A BASE A E AGREGANDO O STATUS ----------------
CRUZAMENTO2 AS (

select 
    *
FROM CRUZAMENTO1 A
left join FILTRO2 B
ON A.num_cpf = B.cpf_base_conta),
-------------------------------------------------------------------------------------------------

---------------- SELECIONAND O NIVEL DE VINCULACAO NA BASE MAIS RECENTE DE VINCULACAO ----------- 
BASE_VINC as (

SELECT 

    at872604_base_vinc_vcli_niv_vinc_202112.num_cpf_cnpj_cliente as cpf,
    at872604_base_vinc_vcli_niv_vinc_202112.safra_ref as safra_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.id_produto_cartao as produto,
    at872604_base_vinc_vcli_niv_vinc_202112.cod_sit_conta as sit_conta,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc as nivel_vinc,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_tratada as nivel_vinc_tratada,
    at872604_base_vinc_vcli_niv_vinc_202112.nivel_vinc_nome as nivel_vinc_nome

from work_pefisa.at872604_base_vinc_vcli_niv_vinc_202112),
------------------------------------------------------------------------------------------------

------------------------------- AGREGANDO NIVEL DE VINC A BASE A ------------------------------- 
CRUZAMENTO3 AS (

select
    * 
from CRUZAMENTO2 A
left join BASE_VINC B
ON A.num_cpf = B.cpf),
------------------------------------------------------------------------------------------------

-------------------------------- BASE DE FUNCIONARIOS ------------------------------------------
BASE_FUNCIONARIO AS (

select 

    cast(REGEXP_REPLACE(num_cpf, '[^0-9]+', '') as bigint) AS CPF_FUNCIONARIO

from dw_incremental.dw_funcionario),
-----------------------------------------------------------------------------------------------

------------------------------- REMOVENDO OS FUNCIONARIOS DA BASE A ---------------------------
CRUZAMENTO4 AS (

select 
    *
FROM CRUZAMENTO3 A
left join BASE_FUNCIONARIO B
ON A.num_cpf = B.CPF_FUNCIONARIO
where B.CPF_FUNCIONARIO is null)
----------------------------------------------------------------------------------------------


------------------------------------------ SELECT FINAL --------------------------------------
select 
    *
from CRUZAMENTO4
where limite_def_app is not null
and val_limite_maximo is not null
and upper(situacao_conta) = 'NORMAL'

--count(523472)
----------------------------------------------------------------------------------------------

________________________________________________________________________________________________________________________


-- BASE EP, PEGAR A PRODUCAO E PERFORMANCE DE UM MES


---------------------------------------- CRIAR TABELA EP --------------------------

WITH 

BASE_EP AS (

SELECT

    tnc.num_cpf_cliente as cpf,
    tnc.num_anomes_compra_saque as SAFRA_EP,
    tnc.per_taxa_juro as TAXA,
    tnc.qtd_parcela as PLANO,
    tnc.val_trans as valor_ep

    FROM unificacao_pefisa.evento_compra_saque  tnc 
    WHERE nvl(tnc.num_anomes_compra_saque, 1) in (202012) -- DEZ 2020
        and cod_tipo_operacao IN(504,10581) 
        and des_status in('PROCESSADA','NORMAL')
        and tnc.cod_estab <> 127 ),


------------------------------- CRIAR TABELA NIVEL DE RISCO -------------------

BASE_NR AS (

SELECT


  A.ID_MES_ANO_AF  AS SAFRA_NR,
  A.NUM_PFJ,
  A.TIP_CARTEIRA,
  (CASE
    WHEN A.DES_NIVEL_RISCO IS NULL THEN 'H'
    ELSE A.DES_NIVEL_RISCO
  END) AS NIVEL_RISCO,
  A.VAL_SALDO_DEVEDOR + A.VAL_JUROS_NORMAL - A.VAL_AAPROPRIAR AS SDO_CONT,
  A.VAL_SALDO_DEVEDOR,
  (CASE
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'AA' THEN 0
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'A'  THEN 14
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'B'  THEN 30
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'C'  THEN 60
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'D'  THEN 90
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'E'  THEN 120
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'F'  THEN 150
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'G'  THEN 180
    WHEN TRIM(A.DES_NIVEL_RISCO) = 'H'  AND TRIM(A.TIP_CARTEIRA) = 'N' THEN 360
    WHEN TRIM(A.DES_NIVEL_RISCO) IS NULL AND TRIM(A.TIP_CARTEIRA) = 'N' THEN 360
    ELSE 361
  END) AS ATRASO,
  A.DAT_ULT_VENCTO,
  (CASE
    WHEN A.COD_GRUPO_ECONOMICO IN (53, 55) THEN 1 --BAND
    WHEN A.COD_GRUPO_ECONOMICO IN (4, 71, 80, 81, 90, 91) THEN 2 --PL
    WHEN A.COD_GRUPO_ECONOMICO IN (57, 58) THEN 3 --ACORDO
    WHEN A.COD_GRUPO_ECONOMICO IN (36, 56) THEN 4 --REPAC
    ELSE 5
  END) AS PRODUTO,
  B.num_cpf_cnpj_cliente,
  
                     row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente
                order by -- organizado por 
                    num_cpf_cliente, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_referencia desc -- data descendente
        ) as NUM_LINHA
  
FROM 
    unificacao_pefisa.relatorio_contabil_audit  A
LEFT JOIN
    unificacao_cliente_incremental.cliente B
ON (A.num_cpf_cliente = B.num_cpf_cnpj_cliente)

WHERE 
num_cpf_cliente > 0
AND VAL_SALDO_DEVEDOR > 0
AND ID_MES_ANO_AF = 202112),
  
  
------------------------------

FILTRO_BASE AS (

SELECT * FROM BASE_NR
WHERE NUM_LINHA = 1),

----------------------- CRIAR TABELA COMPRA E SAQUE + NIVEL DE RISCO --------------------
  
BASE_CRUZAMENTO AS (

SELECT 

    A.*,
    B.*

FROM 
  BASE_EP A
LEFT JOIN
  FILTRO_BASE B
ON A.cpf = B.num_cpf_cnpj_cliente)

----------------------------------------- SELECT FINAL --------------------------------------------

SELECT *

FROM BASE_CRUZAMENTO

________________________________________________________________________________________________________________________


-- DISTRIBUIÇÃO DE PROPOSTAS OUT, NOV E DEZ 2021 PEGAR O RATING DE CONCESSAO


--create table work_pefisa.k857312_BASE_PROD_OUT_NOV_DEZ_2021 AS 

-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto


from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202110, 202111, 202112)
                            and produto in ('PL', 'ELO Mais' )),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20211001 and production_date <= 20211231
and prop_politica = 'P1A'
--and calc_produto in ('1','4','8') 
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20211001 and production_date <= 20211231
and prop_politica = 'P01'
--and calc_produto in ('1','4','8') 
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint))
---------------------------------------------------------------------------------------


--------------------------------- SELECT FINAL ----------------------------------------

select 

    rating_decisao_final,
    count(rating_decisao_final)

FROM BASE_CRUZAMENTO1
where rating_decisao_final is not null
group by rating_decisao_final
order by cast(rating_decisao_final as bigint) desc
---------------------------------------------------------------------------------------

--null 7K
--not null 358K
--total 365K
________________________________________________________________________________________________________________________



-- PEGAR OS LIMITES OFERTADOS PARA AS PROPOSTAS DE JUNHNO A DEZEMBRO 2021 19/01/2022 E VERIFICAR TOTAL DE 
-- CASOS EM QUE FOI APROVADO PRODUTOS PARA CLIENTES SEM O RATING PARA ISSO


--create table work_pefisa.k857312_BASE_PROD_OUT_NOV_DEZ_2021 AS 

-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202106, 202107, 202108, 202109,
                                                         202110, 202111, 202112)
                            and produto in ('PL', 'ELO Mais' )),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20210601 and production_date <= 20211231
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20210601 and production_date <= 20211231
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    val_limite_maximo,
    val_disp_parcela_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite desc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------


--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular)
-------------------------------------------------------------------------------------------


--------------------------------- SELECT FINAL ----------------------------------------
select 

    *,
    case 
         when cast(calc_limite_rotativo as double) = val_limite_maximo then '1'
         --when cast(calc_limite_rotativo as bigint) != cast(val_limite_maximo as bigint) then '0'

         --cast(rpad(cast(calc_limite_rotativo as string),3,'') as double)

         else '0'
         end as Flag_limite_iguais

FROM BASE_CRUZAMENTO2
where rating_decisao_final is not null
AND produto = 'PL'


--PEGANDO JUNHO ATÉ DEZEMBRO
--BAND #167
--PL #2410

________________________________________________________________________________________________________________________





-- PEGAR OS LIMITES OFERTADOS PARA AS PROPOSTAS DE JUNHNO A DEZEMBRO 2021    20/01/2022

--create table work_pefisa.k857312_BASE_PROD_OUT_NOV_DEZ_2021 AS 

-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202111, 202112)
                            and produto in ('PL', 'ELO Mais' )),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20211101 and production_date <= 20211231
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20211101 and production_date <= 20211231
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais,
    b.prop_codigo_da_loja,
    b.prop_usuario_logado

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_parcelas_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite desc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal
where id_produto_cartao in (8,9,10,11,12,13)),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------


--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular),
-------------------------------------------------------------------------------------------


---------------------- CRIANDO FLAG P/ PEGAR LIMITES DIFERENTE NAS BASES ------------------
BASE_FINAL  AS (

select 

    *,
    --cast(rpad(cast(calc_limite_rotativo as string),3,'') as double) as limite_trat,
    -- case 
    --     when cast(rpad(cast(calc_limite_rotativo as string),3,'') as double) = cast( val_limite_maximo as bigint) then '1'
    --     else '0'
    --     end as Flag_limite_iguais
    
         case 
         when CAST(ret_lim_rotativo_multiplo_pl AS DECIMAL(6,0)) = CAST(val_limite_maximo AS DECIMAL(6,0)) then '1'
         else '0'
         end as Flag_limite_iguais    

FROM BASE_CRUZAMENTO2
where rating_decisao_final is not null)
-------------------------------------------------------------------------------------------

------------------------------------- SELECT FINAL ----------------------------------------
select * FROM BASE_FINAL
where Flag_limite_iguais = '0'
and produto = 'PL'
and ret_lim_rotativo_multiplo_pl != '0.00'
and val_limite_maximo  != 0 
and CAST(val_limite_maximo AS DECIMAL(6,0)) >= CAST(ret_lim_rotativo_multiplo_pl AS DECIMAL(6,0)) 
------------------------------------------------------------------------------------------

________________________________________________________________________________________________________________________




-- PEGAR OS LIMITES OFERTADOS PARA AS PROPOSTAS DE JUNHNO A DEZEMBRO 2021

--create table work_pefisa.k857312_BASE_PROD_OUT_NOV_DEZ_2021 AS 

-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202111, 202112)
                            and produto in ('PL', 'ELO Mais' )),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20211101 and production_date <= 20211231
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20211101 and production_date <= 20211231
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais,
    b.prop_codigo_da_loja,
    b.prop_usuario_logado

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_parcelas_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite desc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal
where id_produto_cartao in (8,9,10,11,12,13)),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------


--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular),
-------------------------------------------------------------------------------------------


---------------------- CRIANDO FLAG P/ PEGAR LIMITES DIFERENTE NAS BASES ------------------
BASE_FINAL  AS (

select 

    *,
    --cast(rpad(cast(calc_limite_rotativo as string),3,'') as double) as limite_trat,
    -- case 
    --     when cast(rpad(cast(calc_limite_rotativo as string),3,'') as double) = cast( val_limite_maximo as bigint) then '1'
    --     else '0'
    --     end as Flag_limite_iguais
    
         case 
         when CAST(ret_lim_rotativo_multiplo_pl AS DECIMAL(6,0)) = CAST(val_limite_maximo AS DECIMAL(6,0)) then '1'
         else '0'
         end as Flag_limite_iguais    

FROM BASE_CRUZAMENTO2
where rating_decisao_final is not null)
-------------------------------------------------------------------------------------------

------------------------------------- SELECT FINAL ----------------------------------------
select * FROM BASE_FINAL
where Flag_limite_iguais = '0'
and produto = 'PL'
and ret_lim_rotativo_multiplo_pl != '0.00'
and val_limite_maximo  != 0 
and CAST(val_limite_maximo AS DECIMAL(6,0)) >= CAST(ret_lim_rotativo_multiplo_pl AS DECIMAL(6,0)) 
------------------------------------------------------------------------------------------


_________________________________________________________________________________________________________


-- PEGAR TODAS AS PROPOSTAS DE UMA LOJA 20/01/2022

SELECT 

    prop_cpf_titular,
    data_cod_oper_politica,
    calc_rating_decisao_final,
    calc_score_credito,
    calc_score_politica,
    prop_cpf_titular,
    nomepolitica,
    versaopolitica,
    prop_versao_tablet,
    prop_usuario_logado,
    prop_token_tablet_status,
    resultado_proposta,
    prop_politica,
    ret_motivo_analise

FROM unificacao_fraude.flx_pnb_cadastramento 
where prop_codigo_da_loja = '679' 
and production_date = 20220117

________________________________________________________________________________________________________________________


-- PEGAR LIMITE NA HORA DA CONCESSAO E COMPARA COM A TABELA DE LIMITES EM MAIO DE 2021  21/01/2022


-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,3,5,6) then 'ELO +'
                                when id_produto_cartao_inicial in (9,10) then 'ELO Mult'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                when id_produto_cartao_inicial in (12) then 'PEFISA'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202105)
                            and produto in ('ELO +', 'ELO Mult' ) ),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20210501 and production_date <= 20210531
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20210501 and production_date <= 20210531
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais,
    b.prop_codigo_da_loja,
    b.prop_usuario_logado

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_parcelas_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite desc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal
where id_produto_cartao in (2,3,5,6,9,10)
and num_anomes_posicao_limite = 202105),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------

--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular)
-------------------------------------------------------------------------------------------


------------------------------------- SELECT FINAL ----------------------------------------
select 

    * 

FROM BASE_CRUZAMENTO2
where CAST(val_limite_maximo AS DECIMAL(6,0)) > CAST(ret_lim_rotativo_multiplo_elo_mais AS DECIMAL(6,0))
and produto = 'ELO Mult'
------------------------------------------------------------------------------------------

________________________________________________________________________________________________________________________

-- OUTRA FORMA DE FAZER A MESMA COISA DA QUERRY ANTERIOS, PEGAR A PRODUCAO DE BANDE EM
-- MAIOR DE 2021 E COMPARAR SE O LIMITE DA CONDUCTOR BATE COM O APROSVADO PELA POLITICA 21/01/2022

-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(

                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                when id_produto_cartao_inicial in (12) then 'PEFISA'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202105)
                            and produto in ('ELO Mais')),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20210501 and production_date <= 20210531
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20210501 and production_date <= 20210531
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais,
    b.prop_codigo_da_loja,
    b.prop_usuario_logado

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_parcelas_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite desc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal
where id_produto_cartao in (5,9,10)
and num_anomes_posicao_limite = 202105),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------

--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular)
-------------------------------------------------------------------------------------------


------------------------------------- SELECT FINAL ----------------------------------------
select * FROM BASE_CRUZAMENTO2
where CAST(val_limite_maximo AS DECIMAL(6,0)) > CAST(ret_lim_rotativo_elo_mais AS DECIMAL(6,0))
and ret_lim_rotativo_elo_mais <> '0.00' 
------------------------------------------------------------------------------------------

________________________________________________________________________________________________________________________



---------- BASE PEGAR LIMITES DA CONCESSAO DE UM MES 24/01/2022



-------------------------- BASE PRODUCAO PL E BAND EM DEZEMBRO DE 2021 --------------------------

with  BASE_PL as (

select 

    num_cpf_cliente,
    num_anomes_ads_conta,
    produto

from(
                select * from(
                            select
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.produto,
                                ROW_NUMBER() OVER(PARTITION BY a.num_cpf_cliente ORDER BY dth_prim_ads_conta asc) AS LINHA 
                            from (
                            select 
                                a.num_cpf_cliente,
                                a.num_anomes_ads_conta,
                                a.dth_prim_ads_conta,
                            case 
                                when id_produto_cartao_inicial in (1,4,8) then 'PL'
                                when id_produto_cartao_inicial in (2,5,9) then 'ELO Mais'
                                when id_produto_cartao_inicial in (3,6,10) then 'ELO Grafite'
                                when id_produto_cartao_inicial in (11) then 'TOP'
                                when id_produto_cartao_inicial in (12) then 'PEFISA'
                                else 'Outros' end as produto
                            from base_operacional.conta_cartao_cliente a
                            where a.cod_sit_conta not in (74) 
                            AND id_produto_cartao_inicial NOT IN (7)
                            and a.num_cpf_cliente not in (0)) a) b) c 
                            where linha = 1 
                            and num_anomes_ads_conta in (202112)
                            and produto in ('ELO Mais', 'ELO Grafite', 'TOP', 'PEFISA')),
---------------------------------------------------------------------------------------


------ BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL E BAND (PEGAR RATING) PNB PF --------

BASE_RATING_PF as (

SELECT
    

    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM unificacao_fraude.flx_pernambucanas_pf
where production_date >= 20211201 and production_date <= 20211231
and prop_politica = 'P1A'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------

--- BASE DE PROPOSTAS APROVADAS EM DEZEMBRO DE 2021 DE PL (PEGAR RATING) CADASTRAMENTO ---

BASE_RATING_CADASTRAMENTO as (

SELECT


    prop_cpf_titular, 
    data_cod_oper_politica as data_submissao, 
    prop_politica,
    prop_data_nascimento_titular as data_nasc,
    calc_idade as idade,
    calc_peso_idade as peso_idade,
    calc_serasa_mod_hsp2_score as score_hsp2,
    calc_score_credito as score_hsp2_corrigido,
    calc_peso_score_credito as peso_score_hsp2,
    calc_score_fraude as score_fraude,
    calc_peso_score_fraude as peso_score_fraude,
    calc_neoway_score_nw as score_neoway,
    calc_peso_score_neoway as peso_score_neoway,
    calc_grupo_loja as grupo_loja,
    calc_peso_loja as peso_grupo_loja,
    calc_grupo_cep as grupo_cep,
    calc_peso_cep as peso_cep,
    calc_constante_politica as constante_politica,
    calc_score_politica as score_politica,
    calc_rating_decisao_final as rating_decisao_final,
    calc_limite_rotativo,
    calc_limite_parcela,
    ret_lim_rotativo_multiplo_pl,
    ret_lim_rotativo_multiplo_elo_mais,
    ret_lim_rotativo_elo_mais,
    ret_lim_parc_multiplo_pl,
    ret_lim_parc_multiplo_elo_mais,
    prop_codigo_da_loja,
    prop_usuario_logado,
    
            row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    prop_cpf_titular
                order by -- organizado por 
                    prop_cpf_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    data_cod_oper_politica desc -- data descendente
        ) as NUM_LINHA

FROM  unificacao_fraude.flx_pnb_cadastramento 
where production_date >= 20211201 and production_date <= 20211231
and prop_politica = 'P01'
and upper(resultado_proposta) = 'APROVADO'),
---------------------------------------------------------------------------------------


------------------------  BASE PF UNIDA COM BASE CADASTRAMENTO ------------------------

BASE_JUNCAO AS (

Select * from BASE_RATING_PF
union 
select * from BASE_RATING_CADASTRAMENTO),
---------------------------------------------------------------------------------------


-------------------------------- FILTRO1 ELIMINANDO DUPLICATAS ------------------------

FILTRO1 as (

select * from BASE_JUNCAO

where NUM_LINHA = 1),
---------------------------------------------------------------------------------------


-------------------------------- CRUZAMENTO BASE PL COM BASE FILTRO1 -------------------

BASE_CRUZAMENTO1 AS (

select 
    a.num_anomes_ads_conta,
    a.num_cpf_cliente,
    a.produto,
    b.data_submissao,
    b.prop_politica,
    b.data_nasc,
    b.idade,
    b.score_hsp2,
    b.score_hsp2_corrigido,
    b.peso_score_hsp2,
    b.score_fraude,
    b.peso_score_fraude,
    b.score_neoway,
    b.peso_score_neoway,
    b.grupo_loja,
    b.peso_grupo_loja,
    b.grupo_cep,
    b.peso_cep,
    b.constante_politica,
    b.score_politica,
    b.rating_decisao_final,
    b.calc_limite_rotativo,
    b.calc_limite_parcela,
    b.ret_lim_rotativo_multiplo_pl,
    b.ret_lim_parc_multiplo_pl,
    b.ret_lim_rotativo_multiplo_elo_mais,
    b.ret_lim_rotativo_elo_mais,
    b.ret_lim_parc_multiplo_elo_mais,
    b.prop_codigo_da_loja,
    b.prop_usuario_logado

FROM BASE_PL A
left join FILTRO1 B
ON  CAST(A.num_cpf_cliente AS bigint) = CAST(B.prop_cpf_titular AS bigint)),
---------------------------------------------------------------------------------------


---------------------------------- PEGAR LIMITES MAIS ATUAL ---------------------------
BASE_LIMITES AS (

SELECT 
    num_cpf_cliente_titular,
    id_produto_cartao,
    num_anomes_posicao_limite,
    val_limite_maximo,
    val_limite_parcelas_nac,
    
                   row_number() -- rola os numeros conta de 1 a x
            over( -- sobre
                partition by --divide
                    num_cpf_cliente_titular
                order by -- organizado por 
                    num_cpf_cliente_titular, 
                    --(case when des_sit_conta = 'Normal' then 1 else 0 end) desc,
                    num_anomes_posicao_limite asc -- data descendente
        ) as NUM_LINHA

from base_operacional.limite_disponibilidade_pos_mensal
where id_produto_cartao in (1, 4, 8, 5, 9, 10, 11, 12)
and num_anomes_posicao_limite in (202112) ),
-------------------------------------------------------------------------------------------

--------------------------- FILTRO LIMITES RETIRAR AS DUPLICATAS  -------------------------
FILTRO_BASE_LIMITE AS (
select * from BASE_LIMITES
where NUM_LINHA = 1),
------------------------------------------------------------------------------------------

--------------------------------- AGREGANDO LIMITES A BASE A -----------------------------
BASE_CRUZAMENTO2 AS (
SELECT 

    *

FROM BASE_CRUZAMENTO1 A
LEFT JOIN FILTRO_BASE_LIMITE B
ON A.num_cpf_cliente = B.num_cpf_cliente_titular)
-------------------------------------------------------------------------------------------


------------------------------------- SELECT FINAL ----------------------------------------
select * FROM BASE_CRUZAMENTO2

--where CAST(val_limite_maximo AS DECIMAL(6,0)) <> CAST(ret_lim_rotativo_elo_mais AS DECIMAL(6,0))
--and ret_lim_rotativo_elo_mais <> '0.00' 
------------------------------------------------------------------------------------------

________________________________________________________________________________________________________________________
